<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A rookie&#39;s road to growth</title>
  
  <subtitle>The blog by Luxiong.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://luxiong-github.github.io/"/>
  <updated>2019-09-09T02:17:31.110Z</updated>
  <id>https://luxiong-github.github.io/</id>
  
  <author>
    <name>卢雄</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>QC问题流程梳理</title>
    <link href="https://luxiong-github.github.io/2019/09/04/weaver/question-tidy/"/>
    <id>https://luxiong-github.github.io/2019/09/04/weaver/question-tidy/</id>
    <published>2019-09-04T01:37:05.000Z</published>
    <updated>2019-09-09T02:17:31.110Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="这篇文章是私人的哦，输下密码吧(*๓´╰╯`๓)" />    <label for="pass">这篇文章是私人的哦，输下密码吧(*๓´╰╯`๓)</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      所有处理的流程QC，都整体过了一遍，每个人都讲了问题分析过程及处理方式,并对其中的疑惑点进行了沟通分析...
    
    </summary>
    
      <category term="weaver" scheme="https://luxiong-github.github.io/categories/weaver/"/>
    
    
      <category term="weaver" scheme="https://luxiong-github.github.io/tags/weaver/"/>
    
  </entry>
  
  <entry>
    <title>关于索引的sql语句优化之降龙十八掌</title>
    <link href="https://luxiong-github.github.io/2019/04/18/database/db-index/"/>
    <id>https://luxiong-github.github.io/2019/04/18/database/db-index/</id>
    <published>2019-04-18T15:56:51.000Z</published>
    <updated>2019-09-18T16:13:28.669Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>本文主要介绍了基于索引的SQL语句优化的<code>降龙十八掌</code></p></blockquote><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在规模比较大的局点，往往因为一个小的SQL语句不够优化，导致数据库性能急剧下降，小型机idle所剩无几，应用服务器断连、超时，严重影响业务的正常运行。因此，称低效的SQL语句为业务的‘恶龙’并不过分。数据库的优化方法有很多种，在应用层来说，主要是<strong>基于索引的优化</strong>。本次秘笈根据实际的工作经验，在研发原来已有的方法的基础上，进行了一些扩充，总结了<strong>基于索引的SQL语句优化的降龙十八掌</strong>，希望有一天你能用其中一掌来驯服业务中横行的‘恶龙’。</p><hr><h3 id="总纲——建立必要的索引"><a href="#总纲——建立必要的索引" class="headerlink" title="总纲——建立必要的索引"></a>总纲——建立必要的索引</h3><p>降龙十八掌，总纲只有一句话：<strong>建立必要的索引</strong>，这就是后面降龙十八掌的内功基础。<br>这一点看似容易实际却很难。难就难在如何判断哪些索引是必要的，哪些又是不必要的。<br>判断的最终标准是看这些索引是否对我们的数据库性能有所帮助。具体到方法上，就必须熟悉数据库应用程序中的所有SQL语句，从中统计出常用的可能对性能有影响的部分SQL，分析、归纳出作为Where条件子句的字段及其组合方式；在这一基础上可以初步判断出哪些表的哪些字段应该建立索引。<br>其次，必须熟悉应用程序。必须了解哪些表是数据操作频繁的表；哪些表经常与其他表进行连接；哪些表中的数据量可能很大；对于数据量大的表，其中各个字段的数据分布情况如何；等等。<br>对于满足以上条件的这些表，必须重点关注，因为在这些表上的索引，将对SQL语句的性能产生举足轻重的影响。不过下面还是总结了一下降龙十八掌内功的入门基础，建立索引常用的规则如下：<br>(1) 表的主键、外键必须有索引；<br>(2) 数据量超过<code>300</code>的表应该有索引；<br>(3) 经常与其他表进行连接的表，在连接字段上应该建立索引；<br>(4) 经常出现在<code>where</code>子句中的字段，特别是大表的字段，应该建立索引；<br>(5) 索引应该建在选择性高的字段上；<br>(6) 索引应该建在小字段上，对于大的文本字段甚至超长字段，不要建索引；<br>(7) 复合索引的建立需要进行仔细分析；尽量考虑用单字段索引代替：       </p><ul><li>正确选择复合索引中的主列字段，一般是选择性较好的字段；        </li><li>复合索引的几个字段是否经常同时以<code>AND</code>方式出现在<code>where</code>子句中？单字段查询是否极少甚至没有？如果是，则可以建立复合索引；否则考虑单字段索引；    </li><li>如果复合索引中包含的字段经常单独出现在<code>where</code>子句中，则分解为多个单字段索引；   </li><li>如果复合索引所包含的字段超过<code>3</code>个，那么仔细考虑其必要性，考虑减少复合的字段；  </li><li>如果既有单字段索引，又有这几个字段上的复合索引，一般可以删除复合索引；  </li></ul><p>(8) 频繁进行数据操作的表，不要建立太多的索引；<br>(9) 删除无用的索引，避免对执行计划造成负面影响；     </p><blockquote><p>以上是一些普遍的建立索引时的判断依据。一言以蔽之，索引的建立必须慎重，对每个索引的必要性都应该经过仔细分析，要有建立的依据。因为太多的索引与不充分、不正确的索引对性能都毫无益处：<br>在表上建立的每个索引都会增加存储开销，索引对于插入、删除、更新操作也会增加处理上的开销。<br>另外，过多的复合索引，在有单字段索引的情况下，一般都是没有存在价值的；<br>相反，还会降低数据增加删除时的性能，特别是对频繁更新的表来说，负面影响更大。</p></blockquote><hr><h3 id="降龙十八掌"><a href="#降龙十八掌" class="headerlink" title="降龙十八掌"></a>降龙十八掌</h3><h4 id="第一掌-避免对列的操作"><a href="#第一掌-避免对列的操作" class="headerlink" title="第一掌 避免对列的操作"></a>第一掌 避免对列的操作</h4><p>任何对列的操作都可能导致全表扫描，这里所谓的操作包括数据库函数、计算表达式等等，查询时要尽可能将操作移至等式的右边，甚至去掉函数。<br><em>例1</em>：下列SQL条件语句中的列都建有恰当的索引，但 <code>30</code>万行数据情况下执行速度却非常慢：</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">record</span> <span class="keyword">where</span>  substrb(CardNo,<span class="number">1</span>,<span class="number">4</span>)=<span class="string">'5378'</span>(<span class="number">13</span>秒)   </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">record</span> <span class="keyword">where</span>  amount/<span class="number">30</span>&lt; <span class="number">1000</span>（<span class="number">11</span>秒）   </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">record</span> <span class="keyword">where</span>  to_char(ActionTime,<span class="string">'yyyymmdd'</span>)=<span class="string">'19991201'</span>（<span class="number">10</span>秒）</span><br></pre></td></tr></table></figure><p>由于<code>where</code>子句中对列的任何操作结果都是在SQL运行时逐行计算得到的，因此它不得不进行表扫描，而没有使用该列上面的索引；如果这些结果在查询编译时就能得到，那么就可以被SQL优化器优化，使用索引，避免表扫描，因此将SQL重写如下： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="built_in">record</span> <span class="keyword">where</span> CardNo <span class="keyword">like</span>  <span class="string">'5378%'</span>（&lt; <span class="number">1</span>秒） </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="built_in">record</span> <span class="keyword">where</span> amount  &lt; <span class="number">1000</span>*<span class="number">30</span>（&lt; <span class="number">1</span>秒） </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="built_in">record</span> <span class="keyword">where</span> ActionTime= <span class="keyword">to_date</span> (<span class="string">'19991201'</span> ,<span class="string">'yyyymmdd'</span>)（&lt; <span class="number">1</span>秒）  </span><br><span class="line">差别是很明显的！</span><br></pre></td></tr></table></figure><h4 id="第二掌-避免不必要的类型转换"><a href="#第二掌-避免不必要的类型转换" class="headerlink" title="第二掌 避免不必要的类型转换"></a>第二掌 避免不必要的类型转换</h4><p>需要注意的是，尽量避免潜在的数据类型转换。如将字符型数据与数值型数据比较，ORACLE会自动将字符型用<code>to_number()</code>函数进行转换，从而导致全表扫描。<br><em>例2</em>：表<code>tab1</code>中的列<code>col1</code>是字符型(char)，则以下语句存在类型转换：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> col1,col2 <span class="keyword">from</span> tab1 <span class="keyword">where</span> col1&gt;<span class="number">10</span></span><br></pre></td></tr></table></figure><p>应该写为： </p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> col1,col2 <span class="keyword">from</span> tab1 <span class="keyword">where</span> col1&gt;<span class="string">'10'</span></span><br></pre></td></tr></table></figure><h4 id="第三掌-增加查询的范围限制"><a href="#第三掌-增加查询的范围限制" class="headerlink" title="第三掌 增加查询的范围限制"></a>第三掌 增加查询的范围限制</h4><p>增加查询的范围限制，避免全范围的搜索。<br><em>例3</em>：以下查询表<code>record</code>中时间<code>ActionTime</code>小于2001年3月1日的数据： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="built_in">record</span> <span class="keyword">where</span> ActionTime &lt; <span class="keyword">to_date</span> (<span class="string">'20010301'</span> ,<span class="string">'yyyymm'</span>)</span><br></pre></td></tr></table></figure><p>查询计划表明，上面的查询对表进行全表扫描，如果我们知道表中的最早的数据为2001年1月1日，那么，可以增加一个最小时间，使查询在一个完整的范围之内。修改如下： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="built_in">record</span> <span class="keyword">where</span>  ActionTime &lt; <span class="keyword">to_date</span> (<span class="string">'20010301'</span> ,<span class="string">'yyyymm'</span>) <span class="keyword">and</span> ActionTime &gt; <span class="keyword">to_date</span> (<span class="string">'20010101'</span> ,<span class="string">'yyyymm'</span>)</span><br></pre></td></tr></table></figure><p>后一种SQL语句将利用上<code>ActionTime</code>字段上的索引，从而提高查询效率。把<code>20010301</code>换成一个变量，根据取值的机率，可以有一半以上的机会提高效率。同理，对于大于某个值的查询，如果知道当前可能的最大值，也可以在Where子句中加上<code>“AND 列名&lt; MAX(最大值)”</code>。</p><h4 id="第四掌-尽量去掉”IN”、”OR”"><a href="#第四掌-尽量去掉”IN”、”OR”" class="headerlink" title="第四掌 尽量去掉”IN”、”OR”"></a>第四掌 尽量去掉”IN”、”OR”</h4><p>含有”<code>IN</code>“、”<code>OR</code>“的<code>where</code>子句常会使用工作表，使索引失效；如果不产生大量重复值，可以考虑把子句拆开；拆开的子句中应该包含索引。<br><em>例4</em>： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">stuff</span> <span class="keyword">where</span> id_no <span class="keyword">in</span>(<span class="string">'0'</span>,<span class="string">'1'</span>)（<span class="number">23</span>秒）</span><br></pre></td></tr></table></figure><p>可以考虑将<code>or</code>子句分开：    </p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> count<span class="comment">(*) from stuff where id_no='0'   </span></span><br><span class="line"><span class="comment">select count(*)</span> <span class="keyword">from</span> stuff <span class="keyword">where</span> id_no=<span class="string">'1'</span></span><br></pre></td></tr></table></figure><p>然后再做一个简单的加法，与原来的SQL语句相比，查询速度更快。</p><h4 id="第五掌-尽量去掉-“-lt-gt-”"><a href="#第五掌-尽量去掉-“-lt-gt-”" class="headerlink" title="第五掌 尽量去掉 “&lt;&gt;”"></a>第五掌 尽量去掉 “&lt;&gt;”</h4><p>尽量去掉 “<code>&lt;&gt;</code>“，避免全表扫描，如果数据是枚举值，且取值范围固定，则修改为”<code>OR</code>“方式。<br><em>例5</em>：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> SERVICEINFO <span class="keyword">SET</span> STATE=<span class="number">0</span> <span class="keyword">WHERE</span> STATE&lt;&gt;<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>以上语句由于其中包含了”<code>&lt;&gt;</code>“，执行计划中用了全表扫描(TABLE ACCESS FULL)，没有用到<code>state</code>字段上的索引。实际应用中，由于业务逻辑的限制，字段<code>state</code>为枚举值，只能等于0，1或2，而且，值等于=1，2的很少，因此可以去掉”<code>&lt;&gt;</code>“，利用索引来提高效率。       修改为：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> SERVICEINFO <span class="keyword">SET</span> STATE=<span class="number">0</span>  <span class="keyword">WHERE</span> STATE = <span class="number">1</span> <span class="keyword">OR</span> STATE = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>进一步的修改可以参考第4种方法。</p><h4 id="第六掌-去掉Where子句中的IS-NULL和IS-NOT-NULL"><a href="#第六掌-去掉Where子句中的IS-NULL和IS-NOT-NULL" class="headerlink" title="第六掌 去掉Where子句中的IS NULL和IS NOT NULL"></a>第六掌 去掉Where子句中的IS NULL和IS NOT NULL</h4><p><code>where</code>子句中的<code>IS NULL</code>和<code>IS NOT NULL</code>将不会使用索引而是进行全表搜索，因此需要通过改变查询方式，分情况讨论等方法，去掉<code>where</code>子句中的<code>IS NULL</code>和<code>IS NOT NULL</code>。</p><h4 id="第七掌-索引提高数据分布不均匀时查询效率"><a href="#第七掌-索引提高数据分布不均匀时查询效率" class="headerlink" title="第七掌 索引提高数据分布不均匀时查询效率"></a>第七掌 索引提高数据分布不均匀时查询效率</h4><p>索引的选择性低，但数据的值分布差异很大时，仍然可以利用索引提高效率。A、数据分布不均匀的特殊情况下，选择性不高的索引也要创建。<br>表<code>ServiceInfo</code>中数据量很大，假设有一百万行，其中有一个字段<code>DisposalCourseFlag</code>，取值范围为枚举值：<code>[0，1，2，3，4，5，6，7]</code><br>按照前面说的索引建立的规则，“选择性不高的字段不应该建立索引，该字段只有8种取值，索引值的重复率很高，索引选择性明显很低，因此不建索引。<br>然而，由于该字段上数据值的分布情况非常特殊，具体如下表：<br>取值范围:<code>1~5 6 7</code>       占总数据量的百分比:<code>1% 98% 1%</code><br>而且，常用的查询中，查询<code>DisposalCourseFlag&lt;6</code>的情况既多又频繁，毫无疑问，如果能够建立索引，并且被应用，那么将大大提高这种情况的查询效率。因此，我们需要在该字段上建立索引。</p><h4 id="第八掌-利用HINT强制指定索引"><a href="#第八掌-利用HINT强制指定索引" class="headerlink" title="第八掌 利用HINT强制指定索引"></a>第八掌 利用HINT强制指定索引</h4><p>在ORACLE优化器无法用上合理索引的情况下，利用HINT强制指定索引。<br>继续上面7的例子，ORACLE缺省认定，表中列的值是在所有数据行中均匀分布的，也就是说，在一百万数据量下，每种<code>DisposalCourseFlag</code>值各有12.5万数据行与之对应。<br>假设SQL搜索条件<code>DisposalCourseFlag=2</code>，利用<code>DisposalCourseFlag</code>列上的索引进行数据搜索效率，往往不比全表扫描的高，ORACLE因此对索引“视而不见”，从而在查询路径的选择中，用其他字段上的索引甚至全表扫描。<br>根据我们上面的分析，数据值的分布很特殊，严重的不均匀。为了利用索引提高效率，此时，一方面可以单独对该字段或该表用<code>analyze</code>语句进行分析，对该列搜集足够的统计数据，使ORACLE在查询选择性较高的值时能用上索引；<br>另一方面，可以利用<code>HINT</code>提示，在<code>SELECT</code>关键字后面，加上<code>“/*+ INDEX(表名称，索引名称）*/”</code>的方式，强制ORACLE优化器用上该索引。 比如：      </p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span>  serviceinfo <span class="keyword">where</span> DisposalCourseFlag=<span class="number">1</span> ;</span><br></pre></td></tr></table></figure><p>上面的语句，实际执行中ORACLE用了全表扫描，加上蓝色提示部分后，用到索引查询。如下：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="comment">/*+  INDEX(SERVICEINFO,IX_S_DISPOSALCOURSEFLAG)  */</span>  *  <span class="keyword">from</span>  serviceinfo <span class="keyword">where</span> DisposalCourseFlag=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>请注意，这种方法会加大代码维护的难度，而且该字段上索引的名称被改变之后，必须要同步所有指定索引的<code>HINT</code>代码，否则<code>HINT</code>提示将被ORACLE忽略掉。  </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;本文主要介绍了基于索引的SQL语句优化的&lt;code&gt;降龙十八掌&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Database" scheme="https://luxiong-github.github.io/categories/Database/"/>
    
      <category term="index" scheme="https://luxiong-github.github.io/categories/Database/index/"/>
    
    
      <category term="Database" scheme="https://luxiong-github.github.io/tags/Database/"/>
    
      <category term="SQL" scheme="https://luxiong-github.github.io/tags/SQL/"/>
    
      <category term="index" scheme="https://luxiong-github.github.io/tags/index/"/>
    
  </entry>
  
  <entry>
    <title>Chrome浏览器中F12功能的简单介绍</title>
    <link href="https://luxiong-github.github.io/2019/03/18/study/chrome-F12/"/>
    <id>https://luxiong-github.github.io/2019/03/18/study/chrome-F12/</id>
    <published>2019-03-18T06:57:52.000Z</published>
    <updated>2019-09-18T09:23:54.241Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>Chrome浏览器F12开发者工具开发人员的利器,查看了一些博客和资料，简单总结一下~</p></blockquote><a id="more"></a><h3 id="常用页面"><a href="#常用页面" class="headerlink" title="常用页面"></a>常用页面</h3><p>Chrome开发者工具中，调试时使用最多的三个功能页面是：元素（ELements）、控制台（Console）、源代码（Sources），此外还有网络（Network）等<br><img src="https://i.ibb.co/1nsFRmS/chrome7.png" alt="chrome7"></p><ul><li>元素（Elements）：用于查看或修改HTML元素的属性、CSS属性、监听事件、断点等。</li><li>控制台（Console）：控制台一般用于执行一次性代码，查看JavaScript对象，查看调试日志信息或异常信息。</li><li>源代码（Sources）：该页面用于查看页面的HTML文件源代码、JavaScript源代码、CSS源代码，此外最重要的是可以调试JavaScript源代码，可以给JS代码添加断点等。</li><li>网络（Network）：网络页面主要用于查看header等与网络连接相关的信息。</li></ul><h4 id="元素（Elements）"><a href="#元素（Elements）" class="headerlink" title="元素（Elements）"></a>元素（Elements）</h4><ol><li><p>查看元素代码：点击如图箭头（或用者用快捷键Ctrl+Shift+C）进入选择元素模式，然后从页面中选择需要查看的元素，然后可以在开发者工具元素（Elements）一栏中定位到该元素源代码的具体位置：<br><img src="https://i.ibb.co/zFCc8WK/chrome8.png" alt="chrome8"></p></li><li><p>查看元素属性：可从被定位的源码中查看部分，如class、src，也可在右边的侧栏中查看全部的属性，如下图位置查看：  </p></li></ol><p><img src="https://i.ibb.co/qk7D8bj/chrome1.png" alt="chrome1"></p><ol start="3"><li>修改元素的代码与属性：可直接双击想要修改的部分，然后就进行修改，或者选中要修改部分后点击右键进行修改，如下图：  </li></ol><p><img src="https://i.ibb.co/GsbkXL4/chrome2.png" alt="chrome2"></p><blockquote><p>注意：这个修改也仅对当前的页面渲染生效，不会修改服务器的源代码，故而这个功能也是作为调试页面效果而使用</p></blockquote><ol start="4"><li>右边的侧栏个功能的介绍:如下图所示<br><img src="https://i.ibb.co/FK77psm/chrome3.png" alt="chrome3"></li></ol><h4 id="控制台（Console）"><a href="#控制台（Console）" class="headerlink" title="控制台（Console）"></a>控制台（Console）</h4><ol><li>查看JS对象的及其属性</li><li>执行JS语句</li><li>查看控制台日志：当网页的JS代码中使用了console.log()函数时，该函数输出的日志信息会在控制台中显示。日志信息一般在开发调试时启用，而当正式上线后，一般会将该函数去掉。</li></ol><h4 id="源代码（Sources）"><a href="#源代码（Sources）" class="headerlink" title="源代码（Sources）"></a>源代码（Sources）</h4><p>其主要功能如下介绍:<br><img src="https://i.ibb.co/3f5S09g/chrome4.png" alt="chrome4"></p><h4 id="网络（Network）"><a href="#网络（Network）" class="headerlink" title="网络（Network）"></a>网络（Network）</h4><ol><li><p>主要功能如下：<br><img src="https://i.ibb.co/gPSrtBf/chrome5.png" alt="chrome4"></p></li><li><p>请求文件具体说明：<br><img src="https://i.ibb.co/GPdy0Mb/chrome6.png" alt="chrome4"></p></li><li><p>分为四个模块：</p></li></ol><ul><li>Header：面板列出资源的请求url、HTTP方法、响应状态码、请求头和响应头及它们各自的值、请求参数等等</li><li>Preview：预览面板，用于资源的预览。</li><li>Response：响应信息面板包含资源还未进行格式处理的内容</li><li>Timing：资源请求的详细信息花费时间</li></ul><hr><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><h4 id="只分析异步请求资源"><a href="#只分析异步请求资源" class="headerlink" title="只分析异步请求资源"></a>只分析异步请求资源</h4><p>【Network】下面点击“XHR”，这样就只会显示XHR异步请求资源，以便于快速分析请求Headers和Response<br><img src="https://i.ibb.co/qdqYdfg/chrome9.png" alt="chrome9"></p><h4 id="快速查找并定位文件"><a href="#快速查找并定位文件" class="headerlink" title="快速查找并定位文件"></a>快速查找并定位文件</h4><ol><li>查看源代码，鼠标移到开发工具窗口，按ctrl+p，输入链接地址的前几个字母，会自动联想显示所有符合条件的地址，点击打开即可。（有时第一次打开是空白内容，可再点击一次链接）</li><li>打开之后，如果是js内容，就可以直接在上面打断点调试，另外可以点击内容框的左下角大括号图标“{ }”(pretty print)，对代码进行排版美化。<br><img src="https://i.ibb.co/sqb6X9C/chrome10.png" alt="chrome10"></li></ol><h4 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h4><ol><li><a href="https://blog.csdn.net/m0_37724356/article/details/79884006" target="_blank" rel="noopener">https://blog.csdn.net/m0_37724356/article/details/79884006</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;Chrome浏览器F12开发者工具开发人员的利器,查看了一些博客和资料，简单总结一下~&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="实用技术" scheme="https://luxiong-github.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Chrome" scheme="https://luxiong-github.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/Chrome/"/>
    
    
      <category term="Chrome" scheme="https://luxiong-github.github.io/tags/Chrome/"/>
    
      <category term="Note" scheme="https://luxiong-github.github.io/tags/Note/"/>
    
  </entry>
  
  <entry>
    <title>Chrome浏览器F12 Network中Timing参数含义</title>
    <link href="https://luxiong-github.github.io/2019/03/17/study/chrome-timing/"/>
    <id>https://luxiong-github.github.io/2019/03/17/study/chrome-timing/</id>
    <published>2019-03-17T06:57:52.000Z</published>
    <updated>2019-09-17T07:20:55.344Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>Chrome浏览器开发者工具Network窗口下，Timing中显示资源在整个请求生命周期过程中各部分花费的时间</p></blockquote><a id="more"></a><h3 id="参数示例"><a href="#参数示例" class="headerlink" title="参数示例"></a>参数示例</h3><p><img src="https://i.ibb.co/4jkvdb4/chrome-timing01.png" alt="chrome-timing"></p><h3 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h3><h4 id="Queueing"><a href="#Queueing" class="headerlink" title="Queueing"></a>Queueing</h4><p>请求文件顺序的排序。浏览器是有线程限制的，发请求也不能所有的请求同时发送，会将请求加入队列中（Chrome的最大并发连接数是6）。此参数表示从添加到待处理队列，到实际开始处理的时间间隔标示。</p><h4 id="Stalled（阻塞）"><a href="#Stalled（阻塞）" class="headerlink" title="Stalled（阻塞）"></a>Stalled（阻塞）</h4><p>(1) 简介<br>浏览器得到要发出这个请求的指令，到请求可以发出的等待时间，一般是代理协商、以及等待可复用的TCP连接释放的时间，不包括DNS查询、建立TCP连接等时间等。浏览器对同一个主机域名的并发连接数有限制，因此如果当前的连接数已经超过上限，那么其余请求就会被阻塞，等待新的可用连接；此外脚本也会阻塞其他组件的下载；</p><p>(2) 优化措施  </p><ol><li>将资源合理分布到多台主机上，可以提高并发数，但是增加并行下载数量也会增大开销，这取决于带宽和CPU速度，过多的并行下载会降低性能；  </li><li>脚本置于页面底部；</li></ol><h4 id="DNS-Lookup"><a href="#DNS-Lookup" class="headerlink" title="DNS Lookup"></a>DNS Lookup</h4><p>(1) 简介<br>请求某域名下的资源，浏览器需要先通过DNS解析器得到该域名服务器的IP地址。在DNS查找完成之前，浏览器不能从主机名那里下载到任何东西。DNS查询的时间，当本地DNS缓存没有的时候，这个时间可能是有一段长度的，但是比如你一旦在host中设置了DNS，或者第二次访问，由于浏览器的DNS缓存还在，这个时间就为0了。</p><p>(2) 优化措施  </p><ol><li>利用DNS缓存（设置TTL时间）；</li><li>利用Connection:keep-alive特性建立持久连接，可以在当前连接上进行多个请求，无需再进行域名解析；</li></ol><h4 id="Initial-connection"><a href="#Initial-connection" class="headerlink" title="Initial connection"></a>Initial connection</h4><p>建立TCP连接的时间，就相当于客户端从发请求开始到TCP握手结束这一段，包括DNS查询+Proxy时间+TCP握手时间。</p><h4 id="SSL（包含于HTTPS连接中）"><a href="#SSL（包含于HTTPS连接中）" class="headerlink" title="SSL（包含于HTTPS连接中）"></a>SSL（包含于HTTPS连接中）</h4><p>http是超文本传输协议，以明文方式发送内容，不提供任何方式的数据加密，如果被不法分子截取浏览器和服务器之间的传输报文，会获取其中的信息。<br>https 是安全套接字层超文本传输协议，就是在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。<br>因此建立HTTPS连接的时间相当于三次握手的时间+SSL时间。</p><h4 id="Request-sent（发送请求）"><a href="#Request-sent（发送请求）" class="headerlink" title="Request sent（发送请求）"></a>Request sent（发送请求）</h4><p>(1) 简介<br>发送HTTP请求的时间（从第一个字节发出前到最后一个字节发出后的时间）</p><p>(2) 优化措施  </p><ol><li>减少HTTP请求，可以使用CSS Sprites、内联图片、合并脚本和样式表等；</li><li>对不常变化的组件添加长久的Expires头（相当于设置久远的过期时间），在后续的页面浏览中可以避免不必要的HTTP请求；</li></ol><h4 id="Waiting-TTFB"><a href="#Waiting-TTFB" class="headerlink" title="Waiting(TTFB)"></a>Waiting(TTFB)</h4><p>(1) 简介<br>请求发出后，到收到响应的第一个字节所花费的时间(Time To First Byte)，发送请求完毕到接收请求开始的时间；通常是耗费时间最长的。从发送请求到收到服务器响应的第一字节之间的时间，受到线路、服务器距离等因素的影响。  </p><blockquote><p>注意：网页重定向越多，TTFB越高，所以要减少重定向</p></blockquote><p>(2) 优化措施<br>使用CDN，将用户的访问指向距离最近的工作正常的缓存服务器上，由缓存服务器直接响应用户请求，提高响应速度；</p><h4 id="Content-Download（下载）"><a href="#Content-Download（下载）" class="headerlink" title="Content Download（下载）"></a>Content Download（下载）</h4><p>(1) 简介<br>收到响应的第一个字节，到接受完最后一个字节的时间，就是下载时间。</p><p>(2) 优化措施  </p><ol><li>通过条件Get请求，对比If-Modified-Since和Last-Modified时间，确定是否使用缓存中的组件，服务器会返回“304 Not Modified”状态码，减小响应的大小；</li><li>移除重复脚本，精简和压缩代码，如借助自动化构建工具grunt、gulp等；</li><li>压缩响应内容，服务器端启用gzip压缩，可以减少下载时间；</li></ol><p>参考文档：<a href="https://blog.csdn.net/lhz_333/article/details/93544313" target="_blank" rel="noopener">https://blog.csdn.net/lhz_333/article/details/93544313</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;Chrome浏览器开发者工具Network窗口下，Timing中显示资源在整个请求生命周期过程中各部分花费的时间&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="实用技术" scheme="https://luxiong-github.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Chrome" scheme="https://luxiong-github.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/Chrome/"/>
    
    
      <category term="Chrome" scheme="https://luxiong-github.github.io/tags/Chrome/"/>
    
      <category term="Note" scheme="https://luxiong-github.github.io/tags/Note/"/>
    
      <category term="Timing" scheme="https://luxiong-github.github.io/tags/Timing/"/>
    
  </entry>
  
  <entry>
    <title>Git命令大全</title>
    <link href="https://luxiong-github.github.io/2018/12/22/Git/git-command/"/>
    <id>https://luxiong-github.github.io/2018/12/22/Git/git-command/</id>
    <published>2018-12-22T13:00:38.000Z</published>
    <updated>2019-09-09T15:51:30.948Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>本文记录的是常见的Git命令及其作用</p></blockquote><a id="more"></a><h3 id="增删改查、找回，重置修改文件"><a href="#增删改查、找回，重置修改文件" class="headerlink" title="增删改查、找回，重置修改文件"></a>增删改查、找回，重置修改文件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">help</span> <span class="comment"># 显示command的help</span></span><br><span class="line">git <span class="keyword">show</span> <span class="comment"># 显示某次提交的内容 git show $id</span></span><br><span class="line">git co – <span class="comment"># 抛弃工作区修改</span></span><br><span class="line">git co . <span class="comment"># 抛弃工作区修改</span></span><br><span class="line">git <span class="keyword">add</span> <span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line">git <span class="keyword">add</span> . <span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line">git rm <span class="comment"># 从版本库中删除文件</span></span><br><span class="line">git rm –cached <span class="comment"># 从版本库中删除文件，但不删除git文件</span></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git <span class="keyword">reset</span> – . <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git <span class="keyword">reset</span> –hard <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line">git ci git ci . git ci -a <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做git ci -am “some comments”</span></span><br><span class="line">git ci –amend <span class="comment"># 修改最后一次提交记录</span></span><br><span class="line">git revert &lt;$<span class="keyword">id</span>&gt; <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建次提交对象</span></span><br><span class="line">git revert <span class="keyword">HEAD</span> <span class="comment"># 恢复最后一次提交的状态</span></span><br></pre></td></tr></table></figure><hr><h3 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">diff </span><span class="comment"># 比较当前文件和暂存区文件差异 git diff</span></span><br><span class="line">git <span class="keyword">diff </span><span class="comment"># 比较两次提交之间的差异</span></span><br><span class="line">git <span class="keyword">diff </span>.. <span class="comment"># 在两个分支之间比较</span></span><br><span class="line">git <span class="keyword">diff </span>–staged <span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git <span class="keyword">diff </span>–<span class="keyword">cached </span><span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git <span class="keyword">diff </span>–stat <span class="comment"># 仅仅比较统计信息</span></span><br></pre></td></tr></table></figure><hr><h3 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> git <span class="built_in">log</span> <span class="comment"># 查看该文件每次提交记录</span></span><br><span class="line">git <span class="built_in">log</span> -p <span class="comment"># 查看每次详细修改内容的diff</span></span><br><span class="line">git <span class="built_in">log</span> -p -2 <span class="comment"># 查看最近两次详细修改内容的diff</span></span><br><span class="line">git <span class="built_in">log</span> –<span class="built_in">stat</span> <span class="comment">#查看提交统计信息</span></span><br><span class="line">tig</span><br><span class="line">Mac上可以使用tig代替diff和<span class="built_in">log</span>，brew install tig</span><br></pre></td></tr></table></figure><hr><h3 id="查看、切换、创建和删除分支"><a href="#查看、切换、创建和删除分支" class="headerlink" title="查看、切换、创建和删除分支"></a>查看、切换、创建和删除分支</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">br </span>-r <span class="comment"># 查看远程分支</span></span><br><span class="line">git <span class="keyword">br </span>&lt;new_branch&gt; <span class="comment"># 创建新的分支</span></span><br><span class="line">git <span class="keyword">br </span>-v <span class="comment"># 查看各个分支最后提交信息</span></span><br><span class="line">git <span class="keyword">br </span>–merged <span class="comment"># 查看已经被合并到当前分支的分支</span></span><br><span class="line">git <span class="keyword">br </span>–no-merged <span class="comment"># 查看尚未被合并到当前分支的分支</span></span><br><span class="line">git co <span class="comment"># 切换到某个分支</span></span><br><span class="line">git co -<span class="keyword">b </span>&lt;new_branch&gt; <span class="comment"># 创建新的分支，并且切换过去</span></span><br><span class="line">git co -<span class="keyword">b </span>&lt;new_branch&gt; <span class="comment"># 基于branch创建新的new_branch</span></span><br><span class="line">git co $id <span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></span><br><span class="line">git co $id -<span class="keyword">b </span>&lt;new_branch&gt; <span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></span><br><span class="line">git <span class="keyword">br </span>-d <span class="comment"># 删除某个分支</span></span><br><span class="line">git <span class="keyword">br </span>-D <span class="comment"># 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span></span><br></pre></td></tr></table></figure><hr><h3 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git merge <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line">git merge origin/<span class="keyword">master</span> <span class="title">–no-ff</span> <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line">git rebase <span class="keyword">master</span> <span class="title"># 将master</span> rebase到branch，相当于： git co &amp;&amp; git rebase <span class="keyword">master</span> <span class="title">&amp;&amp; git</span> co <span class="keyword">master</span> <span class="title">&amp;&amp; git</span> merge</span><br></pre></td></tr></table></figure><hr><h3 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h3><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.<span class="keyword">patch</span> <span class="meta"># 生成补丁</span></span><br><span class="line">git apply ../sync.<span class="keyword">patch</span> <span class="meta"># 打补丁</span></span><br><span class="line">git apply –check ../sync.<span class="keyword">patch</span> <span class="meta">#测试补丁能否成功</span></span><br></pre></td></tr></table></figure><hr><h3 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git stash <span class="comment"># 暂存</span></span><br><span class="line">git stash <span class="built_in">list</span> <span class="comment"># 列所有stash</span></span><br><span class="line">git stash apply <span class="comment"># 恢复暂存的内容</span></span><br><span class="line">git stash drop <span class="comment"># 删除暂存区</span></span><br></pre></td></tr></table></figure><hr><h3 id="Git补丁管理-方便在多台机器上开发同步时用-1"><a href="#Git补丁管理-方便在多台机器上开发同步时用-1" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h3><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.<span class="keyword">patch</span> <span class="meta"># 生成补丁</span></span><br><span class="line">git apply ../sync.<span class="keyword">patch</span> <span class="meta"># 打补丁</span></span><br><span class="line">git apply –check ../sync.<span class="keyword">patch</span> <span class="meta">#测试补丁能否成功</span></span><br></pre></td></tr></table></figure><hr><h3 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git pull <span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line">git pull –no-ff <span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></span><br><span class="line">git fetch <span class="keyword">origin </span><span class="comment"># 抓取远程仓库更新</span></span><br><span class="line">git merge <span class="keyword">origin/master </span><span class="comment"># 将远程主分支合并到本地当前分支</span></span><br><span class="line">git co –track <span class="keyword">origin/branch </span><span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></span><br><span class="line">git co -<span class="keyword">b </span>&lt;local_branch&gt; <span class="keyword">origin/&lt;remote_branch&gt; </span><span class="comment"># 基于远程分支创建本地分支，功能同上</span></span><br><span class="line">git push <span class="comment"># push所有分支</span></span><br><span class="line">git push <span class="keyword">origin </span>master <span class="comment"># 将本地主分支推到远程主分支</span></span><br><span class="line">git push -u <span class="keyword">origin </span>master <span class="comment"># 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span></span><br><span class="line">git push <span class="keyword">origin </span>&lt;local_branch&gt; <span class="comment"># 创建远程分支， origin是远程仓库名</span></span><br><span class="line">git push <span class="keyword">origin </span>&lt;local_branch&gt;:&lt;remote_branch&gt; <span class="comment"># 创建远程分支</span></span><br><span class="line">git push <span class="keyword">origin </span>:&lt;remote_branch&gt; <span class="comment">#先删除本地分支(git br -d )，然后再push删除远程分支</span></span><br></pre></td></tr></table></figure><hr><h3 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">GitHub</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span>-v <span class="comment"># 查看远程服务器地址和仓库名称</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">show </span><span class="string">origin </span><span class="comment"># 查看远程服务器仓库状态</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">add </span><span class="string">origin </span><span class="string">git@</span> <span class="string">github:robbin/</span><span class="string">robbin_site.</span><span class="string">git </span><span class="comment"># 添加远程仓库地址</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="built_in">set-url</span> <span class="string">origin </span><span class="string">git@</span> <span class="string">github.</span><span class="string">com:robbin/</span><span class="string">robbin_site.</span><span class="string">git </span><span class="comment"># 设置远程仓库地址(用于修改远程仓库地址) git remote rm # 删除远程仓库</span></span><br></pre></td></tr></table></figure><hr><h3 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git </span><span class="string">clone </span>–<span class="string">bare </span><span class="string">robbin_site </span><span class="string">robbin_site.</span><span class="string">git </span><span class="comment"># 用带版本的项目创建纯版本仓库</span></span><br><span class="line"><span class="string">scp </span>-r <span class="string">my_project.</span><span class="string">git </span><span class="string">git@</span> <span class="string">git.</span><span class="string">csdn.</span><span class="string">net:</span>~ <span class="comment"># 将纯仓库上传到服务器上</span></span><br><span class="line"><span class="string">mkdir </span><span class="string">robbin_site.</span><span class="string">git </span>&amp;&amp; <span class="string">cd </span><span class="string">robbin_site.</span><span class="string">git </span>&amp;&amp; <span class="string">git </span>–<span class="string">bare </span><span class="string">init </span><span class="comment"># 在服务器创建纯仓库</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">add </span><span class="string">origin </span><span class="string">git@</span> <span class="string">github.</span><span class="string">com:robbin/</span><span class="string">robbin_site.</span><span class="string">git </span><span class="comment"># 设置远程仓库地址</span></span><br><span class="line"><span class="string">git </span><span class="string">push </span>-u <span class="string">origin </span><span class="string">master </span><span class="comment"># 客户端首次提交</span></span><br><span class="line"><span class="string">git </span><span class="string">push </span>-u <span class="string">origin </span><span class="string">develop </span><span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="built_in">set-head</span> <span class="string">origin </span><span class="string">master </span><span class="comment"># 设置远程仓库的HEAD指向master分支,也可以命令设置跟踪远程库和本地库</span></span><br><span class="line"><span class="string">git </span><span class="string">branch </span>–<span class="built_in">set-upstream</span> <span class="string">master </span><span class="string">origin/</span><span class="string">master</span></span><br><span class="line"><span class="string">git </span><span class="string">branch </span>–<span class="built_in">set-upstream</span> <span class="string">develop </span><span class="string">origin/</span><span class="string">develop</span></span><br></pre></td></tr></table></figure><h4 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h4><p>在本地新建一个repo,进入一个项目目录,执行git init,会初始化一个repo,并在当前文件夹下创建一个.git文件夹.</p><h4 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h4><p>获取一个url对应的远程Git repo, 创建一个local copy.一般的格式是<code>git clone [url]</code>.<br>clone下来的repo会以url最后一个斜线后面的名称命名,创建一个文件夹,如果想要指定特定的名称,可以<code>git clone [url] newname</code>指定.</p><h4 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h4><p>查询repo的状态.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status -<span class="string">s:</span> -s表示<span class="keyword">short</span>, -s的输出标记会有两列,第一列是对staging区域而言,第二列是对working目录而言.</span><br></pre></td></tr></table></figure><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h4><p>show commit history of a branch(查看历史提交信息).</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> –oneline –<span class="built_in">number</span>  <span class="comment">#每条log只显示一行,显示number条.</span></span><br><span class="line">git <span class="built_in">log</span> –oneline –graph   <span class="comment">#可以图形化地表示出分支合并历史.</span></span><br><span class="line">git <span class="built_in">log</span> branchname        <span class="comment">#可以显示特定分支的log.</span></span><br><span class="line">git <span class="built_in">log</span> –oneline branch1 ^branch2 <span class="comment">#可以查看在分支1,却不在分支2中的提交.^表示排除这个分支(Window下可能要给^branch2加上引号).</span></span><br><span class="line">git <span class="built_in">log</span> –decorate         <span class="comment">#会显示出tag信息.</span></span><br><span class="line">git <span class="built_in">log</span> –author=[author <span class="built_in">name</span>]     <span class="comment">#可以指定作者的提交历史.</span></span><br><span class="line">git <span class="built_in">log</span> –<span class="keyword">since</span> –<span class="keyword">before</span> –<span class="keyword">until</span> –<span class="keyword">after</span>  <span class="comment">#根据提交时间筛选log.</span></span><br><span class="line">–no-merges                <span class="comment">#可以将merge的commits排除在外.</span></span><br><span class="line">git <span class="built_in">log</span> –grep             <span class="comment">#根据commit信息过滤log: git log –grep=keywords，默认情况下, git log –grep –author是OR的关系,即满足一条即被返回,如果你想让它们是AND的关系,可以加上–all-match的option.</span></span><br><span class="line">git <span class="built_in">log</span> -S                <span class="comment">#filter by introduced diff，比如: git log -SmethodName (注意S和后面的词之间没有等号分隔).</span></span><br><span class="line">git <span class="built_in">log</span> -p                <span class="comment">#show patch introduced at each commit.每一个提交都是一个快照(snapshot)Git会把每次提交的diff计算出来,作为一个patch显示给你看.另一种方法是git show [SHA].</span></span><br><span class="line">git <span class="built_in">log</span> –stat             <span class="comment">#show diffstat of changes introduced at each commit.同样是用来看改动的相对信息的,–stat比-p的输出更简单一些.</span></span><br></pre></td></tr></table></figure><h4 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h4><p>查询repo的状态.</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在提交之前,Git有一个暂存区(staging <span class="meta">area</span>),可以放入新添加的文件或者加入新的改动. commit时提交的改动是上一次加入到staging <span class="meta">area</span>中的改动,而不是我们disk上的改动.</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">add </span>.     #会递归地添加当前工作目录中的所有文件.</span><br></pre></td></tr></table></figure><h4 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show </span><span class="keyword">diff </span>of unstaged changes   <span class="comment">#此命令比较的是工作目录中当前文件和暂存区域快照之间的差异,也就是修改之后还没有暂存起来的变化内容.</span></span><br><span class="line">若要看已经暂存起来的文件和上次提交时的快照之间的差异,可以用:</span><br><span class="line">git <span class="keyword">diff </span>--<span class="keyword">cached </span>命令.</span><br><span class="line"><span class="keyword">show </span><span class="keyword">diff </span>of staged changes.</span><br><span class="line">(Git <span class="number">1</span>.<span class="number">6</span>.<span class="number">1</span> 及更高版本还允许使用 git <span class="keyword">diff </span>--staged，效果是相同的).</span><br><span class="line"></span><br><span class="line">git <span class="keyword">diff </span>HEAD</span><br><span class="line"><span class="keyword">show </span><span class="keyword">diff </span>of all staged <span class="keyword">or </span>unstated changes.</span><br><span class="line">也即比较woking <span class="keyword">directory和上次提交之间所有的改动.</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">如果想看自从某个版本之后都改动了什么,可以用:</span></span><br><span class="line"><span class="keyword">git </span><span class="keyword">diff </span>[version tag]</span><br><span class="line">跟log命令一样,<span class="keyword">diff也可以加上--stat参数来简化输出.</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">git </span><span class="keyword">diff </span>[<span class="keyword">branchA] </span>[<span class="keyword">branchB]可以用来比较两个分支.</span></span><br><span class="line"><span class="keyword">它实际上会返回一个由A到B的patch,不是我们想要的结果.</span></span><br><span class="line"><span class="keyword">一般我们想要的结果是两个分支分开以后各自的改动都是什么,是由命令:</span></span><br><span class="line"><span class="keyword">git </span><span class="keyword">diff </span>[<span class="keyword">branchA]…[branchB]给出的.</span></span><br><span class="line"><span class="keyword">实际上它是:git </span><span class="keyword">diff </span>$(git merge-<span class="keyword">base </span>[<span class="keyword">branchA] </span>[<span class="keyword">branchB]) </span>[<span class="keyword">branchB]的结果.</span></span><br></pre></td></tr></table></figure><h4 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">提交已经被add进来的改动.</span><br><span class="line">git <span class="keyword">commit</span> -m “the <span class="keyword">commit</span> message”</span><br><span class="line">git <span class="keyword">commit</span> -a 会先把所有已经track的文件的改动<span class="keyword">add</span>进来,然后提交(有点像svn的一次提交,不用先暂存). 对于没有track的文件,还是需要git <span class="keyword">add</span>一下.</span><br><span class="line">git <span class="keyword">commit</span> –amend 增补提交. 会使用与当前提交节点相同的父节点进行一次新的提交,旧的提交将会被取消.</span><br></pre></td></tr></table></figure><h4 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h4><p>(1) 概述</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">undo changes and commits.</span><br><span class="line">这里的HEAD关键字指的是当前分支最末梢最新的一个提交.也就是版本库中该分支上的最新版本.</span><br><span class="line">git <span class="keyword">reset</span> <span class="keyword">HEAD</span>: unstage files <span class="keyword">from</span> <span class="keyword">index</span> <span class="keyword">and</span> <span class="keyword">reset</span> pointer <span class="keyword">to</span> <span class="keyword">HEAD</span></span><br><span class="line">这个命令用来把不小心<span class="keyword">add</span>进去的文件从staged状态取出来,可以单独针对某一个文件操作: git <span class="keyword">reset</span> <span class="keyword">HEAD</span> - - filename, 这个- - 也可以不加.</span><br><span class="line">git <span class="keyword">reset</span> –soft</span><br><span class="line"><span class="keyword">move</span> <span class="keyword">HEAD</span> <span class="keyword">to</span> specific <span class="keyword">commit</span> <span class="keyword">reference</span>, <span class="keyword">index</span> <span class="keyword">and</span> staging <span class="keyword">are</span> untouched.</span><br><span class="line">git <span class="keyword">reset</span> –hard</span><br><span class="line">unstage files <span class="keyword">AND</span> <span class="keyword">undo</span> <span class="keyword">any</span> changes <span class="keyword">in</span> the working <span class="keyword">directory</span> since <span class="keyword">last</span> commit.</span><br><span class="line">使用git <span class="keyword">reset</span> —hard <span class="keyword">HEAD</span>进行<span class="keyword">reset</span>,即上次提交之后,所有staged的改动和工作目录的改动都会消失,还原到上次提交的状态.</span><br><span class="line">这里的<span class="keyword">HEAD</span>可以被写成任何一次提交的<span class="keyword">SHA</span><span class="number">-1.</span></span><br><span class="line">不带soft和hard参数的git <span class="keyword">reset</span>,实际上带的是默认参数mixed.</span><br></pre></td></tr></table></figure><p>(2) 总结</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">reset</span> <span class="comment">--mixed id,是将git的HEAD变了(也就是提交记录变了),但文件并没有改变，(也就是working tree并没有改变). 取消了commit和add的内容.</span></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--soft id. 实际上，是git reset –mixed id 后,又做了一次git add.即取消了commit的内容.</span></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard id.是将git的HEAD变了,文件也变了.</span></span><br><span class="line">按改动范围排序如下:</span><br><span class="line">soft (<span class="keyword">commit</span>) &lt; mixed (<span class="keyword">commit</span> + <span class="keyword">add</span>) &lt; hard (<span class="keyword">commit</span> + <span class="keyword">add</span> + <span class="keyword">local</span> working)</span><br></pre></td></tr></table></figure><h4 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h4><p>反转撤销提交.只要把出错的提交(commit)的名字(reference)作为参数传给命令就可以了.</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">revert</span> HEAD: 撤销最近的一个提交.</span><br><span class="line">git <span class="built_in">revert</span>会创建一个反向的新提交,可以通过参数-n来告诉Git先不要提交.</span><br></pre></td></tr></table></figure><h4 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">rm</span> <span class="keyword">file</span>: 从staging区移除文件,同时也移除出工作目录.</span><br><span class="line">git <span class="keyword">rm</span> –cached: 从staging区移除文件,但留在工作目录中.</span><br><span class="line">git <span class="keyword">rm</span> –cached从功能上等同于git reset HEAD,清除了缓存区,但不动工作目录树.</span><br></pre></td></tr></table></figure><h4 id="git-clean"><a href="#git-clean" class="headerlink" title="git clean"></a>git clean</h4><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clean是从工作目录中移除没有track的文件.</span><br><span class="line">通常的参数是git clean -df:</span><br><span class="line">-d表示同时移除目录,-f表示force,因为在git的配置文件中, clean.requireForce=<span class="literal">true</span>,如果不加-f,clean将会拒绝执行.</span><br></pre></td></tr></table></figure><h4 id="git-mv"><a href="#git-mv" class="headerlink" title="git mv"></a>git mv</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm - - <span class="keyword">cached </span><span class="keyword">orig; </span>mv <span class="keyword">orig </span>new<span class="comment">; git add new</span></span><br></pre></td></tr></table></figure><h4 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h4><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">把当前的改动压入一个栈.</span><br><span class="line">git stash将会把当前目录和index中的所有改动(但不包括未track的文件)压入一个栈,然后留给你一个clean的工作状态,即处于上一次最新提交处.</span><br><span class="line">git stash list会显示这个栈的list.</span><br><span class="line">git stash apply:取出stash中的上一个项目(stash@&#123;<span class="number">0</span>&#125;),并且应用于当前的工作目录.</span><br><span class="line">也可以指定别的项目,比如git stash apply stash@&#123;<span class="number">1</span>&#125;.</span><br><span class="line">如果你在应用stash中项目的同时想要删除它,可以用git stash pop</span><br><span class="line"></span><br><span class="line">删除stash中的项目:</span><br><span class="line">git stash drop: 删除上一个,也可指定参数删除指定的一个项目.</span><br><span class="line">git stash clear: 删除所有项目.</span><br></pre></td></tr></table></figure><h4 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">branch可以用来列出分支,创建分支和删除分支.</span></span><br><span class="line"><span class="keyword">git </span><span class="keyword">branch </span>-v可以看见每一个分支的最后一次提交.</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">branch: </span>列出本地所有分支,当前分支会被星号标示出.</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>(<span class="keyword">branchname): </span>创建一个新的分支(当你用这种方式创建分支的时候,分支是基于你的上一次提交建立的).</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>-d (<span class="keyword">branchname): </span>删除一个分支.</span><br><span class="line">删除remote的分支:</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push </span>(remote-name) :(<span class="keyword">branch-name): </span>delete a remote <span class="keyword">branch.</span></span><br><span class="line"><span class="keyword">这个是因为完整的命令形式是:</span></span><br><span class="line"><span class="keyword">git </span><span class="keyword">push </span>remote-name local-<span class="keyword">branch:remote-branch</span></span><br><span class="line"><span class="keyword">而这里local-branch的部分为空,就意味着删除了remote-branch</span></span><br></pre></td></tr></table></figure><h4 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git checkout (branchname)     <span class="meta">#切换到一个分支.</span></span><br><span class="line">git checkout -b (branchname)  <span class="meta">#创建并切换到新的分支.</span></span><br><span class="line">这个命令是将git branch <span class="keyword">new</span><span class="type">branch</span>和git checkout <span class="keyword">new</span><span class="type">branch</span>合在一起的结果.</span><br><span class="line">checkout还有另一个作用:<span class="type"></span>替换本地改动:<span class="type"></span></span><br><span class="line"><span class="type">git checkout </span>–</span><br><span class="line">此命令会使用HEAD中的最新内容替换掉你的工作目录中的文件.已添加到暂存区的改动以及新文件都不会受到影响.</span><br><span class="line">注意:<span class="type">git checkout filename</span>会删除该文件中所有没有暂存和提交的改动,这个操作是不可逆的.</span><br></pre></td></tr></table></figure><h4 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h4><p>把一个分支merge进当前的分支.</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git merge [alias]/[branch]    #把远程分支merge到当前分支.</span><br><span class="line">如果出现冲突,需要手动修改,可以用git mergetool.</span><br><span class="line">解决冲突的时候可以用到git diff,解决完之后用git add添加,即表示冲突已经被resolved.</span><br></pre></td></tr></table></figure><h4 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tag</span> <span class="title">a</span> point <span class="keyword">in</span> history as import.</span><br><span class="line">会在一个提交上建立永久性的书签,通常是发布一个release版本或者ship了什么东西之后加<span class="keyword">tag</span>.</span><br><span class="line">比如: git <span class="keyword">tag</span> <span class="title">v1</span>.<span class="number">0</span></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> v1.<span class="number">0</span>, -a参数会允许你添加一些信息,即make an annotated <span class="keyword">tag</span>.</span><br><span class="line">当你运行git <span class="keyword">tag</span> <span class="title">-a</span>命令的时候,Git会打开一个编辑器让你输入<span class="keyword">tag</span>信息.</span><br></pre></td></tr></table></figure><h4 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h4><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git </span><span class="string">remote </span>           <span class="comment">#列出remote aliases.</span></span><br><span class="line">如果你<span class="string">clone一</span>个<span class="string">project,</span><span class="string">Git会</span>自动将原来的<span class="string">url添</span>加进来,别名就叫做:<span class="string">origin.</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span>-v         <span class="comment">#可以看见每一个别名对应的实际url.</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">add </span>[<span class="string">alias]</span> [<span class="string">url]</span>          <span class="comment">#添加一个新的remote repo.</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">rm </span>[<span class="string">alias]</span>                 <span class="comment">#删除一个存在的remote alias.</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="string">rename </span>[<span class="string">old-alias]</span> [<span class="string">new-alias]</span>  <span class="comment">#重命名.</span></span><br><span class="line"><span class="string">git </span><span class="string">remote </span><span class="built_in">set-url</span> [<span class="string">alias]</span> [<span class="string">url]</span>   <span class="comment">#更新url. 可以加上—push和fetch参数,为同一个别名set不同的存取地址.</span></span><br></pre></td></tr></table></figure><h4 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">download <span class="built_in">new</span> branches <span class="keyword">and</span> data <span class="built_in">from</span> <span class="keyword">a</span> remote repository.</span><br><span class="line">可以git fetch [<span class="built_in">alias</span>]取某一个远程repo,也可以git fetch –all取到全部repo</span><br><span class="line">fetch将会取到所有你本地没有的数据,所有取下来的分支可以被叫做remote branches,它们和本地分支一样(可以看diff,<span class="built_in">log</span>等,也可以<span class="built_in">merge</span>到其他分支),但是Git不允许你checkout到它们.</span><br></pre></td></tr></table></figure><h4 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fetch <span class="built_in">from</span> <span class="keyword">a</span> remote repo <span class="keyword">and</span> <span class="keyword">try</span> <span class="built_in">to</span> <span class="built_in">merge</span> <span class="keyword">into</span> <span class="keyword">the</span> current branch.</span><br><span class="line">pull == fetch + <span class="built_in">merge</span> FETCH_HEAD</span><br><span class="line">git pull会首先执行git fetch,然后执行git <span class="built_in">merge</span>,把取来的分支的head <span class="built_in">merge</span>到当前分支.这个<span class="built_in">merge</span>操作会产生一个新的commit.</span><br><span class="line">如果使用–rebase参数,它会执行git rebase来取代原来的git <span class="built_in">merge</span>.</span><br></pre></td></tr></table></figure><h4 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h4><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">–rebase不会产生合并的提交,它会将本地的所有提交临时保存为补丁(patch),放在”.git/rebase”目录中,然后将当前分支更新到最新的分支尖端,最后把保存的补丁应用到分支上.</span><br><span class="line">rebase的过程中,也许会出现冲突,Git会停止rebase并让你解决冲突,在解决完冲突之后,用git add去更新这些内容,然后无需执行commit,只需要:</span><br><span class="line">git rebase –continue就会继续打余下的补丁.</span><br><span class="line">git rebase –abort将会终止rebase,当前分支将会回到rebase之前的状态.</span><br></pre></td></tr></table></figure><h4 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> [<span class="built_in">alias</span>] [branch]</span><br><span class="line">将会把当前分支merge到<span class="built_in">alias</span>上的[branch]分支.如果分支已经存在,将会更新,如果不存在,将会添加这个分支.</span><br><span class="line">如果有多个人向同一个remote repo <span class="built_in">push</span>代码, Git会首先在你试图<span class="built_in">push</span>的分支上运行git <span class="built_in">log</span>,检查它的历史中是否能看到server上的branch现在的tip,如果本地历史中不能看到server的tip,说明本地的代码不是最新的,Git会拒绝你的<span class="built_in">push</span>,让你先fetch,merge,之后再<span class="built_in">push</span>,这样就保证了所有人的改动都会被考虑进来.</span><br></pre></td></tr></table></figure><h4 id="git-reflog"><a href="#git-reflog" class="headerlink" title="git reflog"></a>git reflog</h4><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git reflog是对reflog进行管理的命令,reflog是git用来记录引用变化的一种机制,比如记录分支的变化或者是HEAD引用的变化.</span><br><span class="line">当git reflog不指定引用的时候,默认列出HEAD的reflog.</span><br><span class="line">HEAD@&#123;<span class="number">0</span>&#125;代表HEAD当前的值,HEAD@&#123;<span class="number">3</span>&#125;代表HEAD在<span class="number">3</span>次变化之前的值.</span><br><span class="line">git会将变化记录到HEAD对应的reflog文件中,其路径为.git/logs/HEAD, 分支的reflog文件都放在.git/logs/refs目录下的子目录中.</span><br></pre></td></tr></table></figure><h4 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h4><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">^代表父提交,当一个提交有多个父提交时,可以通过在^后面跟上一个数字,表示第几个父提交: ^相当于^<span class="number">1</span>.</span><br><span class="line">~相当于连续的个^.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;本文记录的是常见的Git命令及其作用&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Git" scheme="https://luxiong-github.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://luxiong-github.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>批量修改文件名称与格式</title>
    <link href="https://luxiong-github.github.io/2018/12/06/python/rename-file/"/>
    <id>https://luxiong-github.github.io/2018/12/06/python/rename-file/</id>
    <published>2018-12-06T04:38:43.000Z</published>
    <updated>2019-09-18T07:47:27.301Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>主要介绍一下如何利用Python脚本实现给指定的文件数据集按照一定的格式批量重命名，文件不单指图片，其他格式的也可以，此处以图片转换为例，希望能够帮到您(^_−)☆</p></blockquote><a id="more"></a><h4 id="Python脚本"><a href="#Python脚本" class="headerlink" title="Python脚本"></a>Python脚本</h4><p>(1) 写的是python脚本，需要安装<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">python环境</a>，安装教程可自行百度<br>(2) 桌面新建<code>test1.txt</code>文档后将其改为<code>test1.py</code>,打开文档，将以下内容粘贴进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"> </span><br><span class="line">import os</span><br><span class="line">class BatchRename():</span><br><span class="line">    <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">    批量重命名文件夹中的图片文件</span></span><br><span class="line"><span class="string">    '</span><span class="string">''</span></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.path = <span class="string">'E:\Pictures\'</span>     <span class="comment">#存放图片的文件夹路径，注意转义字符(\b、\t等)</span></span><br><span class="line">    def rename(self):</span><br><span class="line">        filelist = os.listdir(self.path)</span><br><span class="line">        total_num = len(filelist)</span><br><span class="line">        i = 1</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> filelist:</span><br><span class="line">            <span class="keyword">if</span> item.endswith(<span class="string">'.jpg'</span>):  <span class="comment">#指定选取的图片格式为jpg</span></span><br><span class="line"> </span><br><span class="line">                src = os.path.join(os.path.abspath(self.path), item)</span><br><span class="line">                <span class="comment"># 2018-11-20_bqb00  2018-11-20_hzw00</span></span><br><span class="line">                dst = os.path.join(os.path.abspath(self.path), <span class="string">'2018-11-20_00'</span> + str(i) + <span class="string">'.png'</span>)      <span class="comment">#设置新的图片名称</span></span><br><span class="line">                try:</span><br><span class="line">                    os.rename(src, dst)</span><br><span class="line">                    <span class="built_in">print</span> (<span class="string">"转换图片 %s 成为 %s ..."</span> % (src, dst))</span><br><span class="line">                    i = i + 1    </span><br><span class="line">                except:</span><br><span class="line">                    <span class="built_in">continue</span></span><br><span class="line"> </span><br><span class="line">        <span class="built_in">print</span> (<span class="string">"共 %d 张图片重命名和转换成 %d jpgs"</span> % (total_num, i-1))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    demo = BatchRename()</span><br><span class="line"> </span><br><span class="line">    demo.rename()</span><br></pre></td></tr></table></figure><p>(3) 只要按自己的需求修改脚本中的中文注释部分即可，上述脚本的功能是：将<code>E:\Pictures\</code>目录下的jpg格式的图片批量重命名为<code>2018-11-20_00</code>形式的png图片</p><blockquote><p>注意路径中的转义字符，例如<code>F:\picture\blog</code>要写成<code>F:\picture\\blog</code><br>(4) 在桌面按住<code>shift+鼠标右键</code>，打开打开PowerShell窗口，执行<code>python test1.py</code>命令,出现如下结果：<br><img src="https://i.ibb.co/yy673gN/grbkdj-16.jpg" alt="批量修改图片"></p></blockquote><h4 id="懒人专用"><a href="#懒人专用" class="headerlink" title="懒人专用"></a>懒人专用</h4><blockquote><p>上面的脚本还有手动输入命令执行，我不想输命令怎么办呢？<br>(1) 在<code>test1.py</code>同级目录(此处为桌面)新建一个<code>test2.txt</code>文档，打开文档，将以下内容粘贴进去：</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行批量修改图片脚本</span></span><br><span class="line"><span class="attribute">python</span>  test1.py</span><br></pre></td></tr></table></figure><p>(2) 保存之后将<code>test2.txt</code>改为<code>test2.bat</code>，然后双击就能自动执行上述python脚本文件</p><blockquote><p>注：test2.bat一定要和test2.py在同一目录</p></blockquote><p>参考链接：<a href="https://blog.csdn.net/u014797226/article/details/80028459" target="_blank" rel="noopener">https://blog.csdn.net/u014797226/article/details/80028459</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;主要介绍一下如何利用Python脚本实现给指定的文件数据集按照一定的格式批量重命名，文件不单指图片，其他格式的也可以，此处以图片转换为例，希望能够帮到您(^_−)☆&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://luxiong-github.github.io/categories/Python/"/>
    
      <category term="tools" scheme="https://luxiong-github.github.io/categories/Python/tools/"/>
    
    
      <category term="python" scheme="https://luxiong-github.github.io/tags/python/"/>
    
      <category term="script" scheme="https://luxiong-github.github.io/tags/script/"/>
    
  </entry>
  
  <entry>
    <title>JVM性能分析常用的命令</title>
    <link href="https://luxiong-github.github.io/2018/12/04/java/JVM/jvm01/"/>
    <id>https://luxiong-github.github.io/2018/12/04/java/JVM/jvm01/</id>
    <published>2018-12-04T06:35:46.000Z</published>
    <updated>2019-09-09T12:59:37.517Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>JVM性能分析常用的命令，包括jstack(查看jvm线程运行状态)、jps(显示本地的java进程及对应进程号)、jstat(监视VM内存工具)、jinfo(输出并修改运行时的java进程的opts)、jmap(查看堆内存使用状况)、jconsole(java GUI监视工具)、jvisualvm(JVM运行监控工具)<br>注意：在使用这些工具前，先用JPS命令获取当前的每个JVM进程号[pid]，然后选择要查看的JVM</p></blockquote><a id="more"></a><h3 id="jstack"><a href="#jstack" class="headerlink" title="jstack"></a>jstack</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>查看jvm线程运行状态，是否有死锁现象等等信息.</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jstack <span class="string">pid :</span>thread dump   <span class="comment">//查看对应进程的jstack的相关语法</span></span><br><span class="line">jstack –l pid     <span class="comment">//查看对应的线程信息</span></span><br><span class="line">jstack –l pid &gt;<span class="string">E:</span>\luxiong.txt <span class="comment">//上述结果打印到指定文档</span></span><br></pre></td></tr></table></figure><hr><h3 id="jps"><a href="#jps" class="headerlink" title="jps"></a>jps</h3><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><p>与unix上的ps类似，用来显示本地的java进程，可以查看本地运行着几个java程序，并显示他们的进程号.</p><h4 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用法命令行(<span class="keyword">cmd</span><span class="bash">)里打 jps就行了</span></span><br></pre></td></tr></table></figure><hr><h3 id="jstat"><a href="#jstat" class="headerlink" title="jstat"></a>jstat</h3><h4 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h4><p>jstat工具特别强大，有众多的可选项，详细查看堆内各个部分的使用量，以及加载类的数量。使用时，需加上查看进程的进程id，和所选参数.</p><h4 id="常用命令-2"><a href="#常用命令-2" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单个参数</span></span><br><span class="line">jstat -class pid    <span class="comment">//显示加载class的数量，及所占空间等信息.</span></span><br><span class="line">jstat -compiler pid    <span class="comment">//显示VM实时编译的数量等信息.</span></span><br><span class="line">jstat -gc pid    <span class="comment">//可以显示gc的信息，查看gc的次数，及时间。其中最后五项，分别是young gc的次数，young gc的时间，full gc的次数，full gc的时间，gc的总时间.</span></span><br><span class="line">jstat -gccapacity pid    <span class="comment">//可以显示，VM内存中三代（young,old,perm）对象的使用和占用大小，如：PGCMN显示的是最小perm的内存使用量，PGCMX显示的是perm的内存最大使用量，PGC是当前新生成的perm内存占用量，PC是但前perm内存占用量。其他的可以根据这个类推， OC是old内纯的占用量.</span></span><br><span class="line">jstat -gcnew pid    <span class="comment">//new对象的信息.</span></span><br><span class="line">jstat -gcnewcapacity pid    <span class="comment">//new对象的信息及其占用量.</span></span><br><span class="line">jstat -gcold pid    <span class="comment">//old对象的信息.</span></span><br><span class="line">jstat -gcoldcapacity pid    <span class="comment">//old对象的信息及其占用量.</span></span><br><span class="line">jstat -gcpermcapacity pid    <span class="comment">//perm对象的信息及其占用量.</span></span><br><span class="line">jstat -util pid    <span class="comment">//统计gc信息统计.</span></span><br><span class="line">jstat -printcompilation pid    <span class="comment">//当前VM执行的信息.</span></span><br><span class="line"><span class="comment">//多个参数</span></span><br><span class="line">jstat -class pid <span class="number">250</span> <span class="number">6</span>    <span class="comment">//每250毫秒打印一次，一共打印6次.</span></span><br><span class="line">jstat -class -<span class="selector-tag">h2</span> pid <span class="number">250</span> <span class="number">6</span>    <span class="comment">//上述基础上增加每2行显示一下标题.</span></span><br><span class="line">jstack -gcutil  pid  <span class="number">1000</span> <span class="number">100</span>    <span class="comment">//每1000ms统计一次gc情况统计100次</span></span><br><span class="line">jstat -gcutil pid <span class="number">2000</span> &gt;E:luxiong<span class="selector-class">.txt</span>    <span class="comment">//将上述结果生成指定文件.</span></span><br></pre></td></tr></table></figure><hr><h3 id="jinfo"><a href="#jinfo" class="headerlink" title="jinfo"></a>jinfo</h3><h4 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h4><p>可以输出并修改运行时的java进程的运行参数(opts).</p><h4 id="常用命令-3"><a href="#常用命令-3" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jinfo -opt pid  <span class="comment">//用法示例(opt表示对应参数,如下示例)</span></span><br><span class="line">jinfo -<span class="built_in">flag</span> MaxPermSize pid     <span class="comment">//查看进程pid的MaxPerm大小</span></span><br></pre></td></tr></table></figure><hr><h3 id="jmap"><a href="#jmap" class="headerlink" title="jmap"></a>jmap</h3><h4 id="功能-4"><a href="#功能-4" class="headerlink" title="功能"></a>功能</h4><p>jmap是一个可以输出所有内存中对象的工具，甚至可以将VM 中的heap，以二进制输出成文本.</p><h4 id="常用命令-4"><a href="#常用命令-4" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jmap -dump:<span class="keyword">format</span>=b,<span class="keyword">file</span>=E:\luxiong.bin <span class="keyword">pid</span>  //<span class="keyword">file</span>-保存路径及文件名  <span class="keyword">pid</span>-进程编号 </span><br><span class="line">jmap -dump:<span class="keyword">file</span>=E:\luxiong.dump <span class="keyword">pid</span>  //<span class="keyword">file</span>-保存路径及文件名  <span class="keyword">pid</span>-进程编号 </span><br><span class="line">jmap -histo:live <span class="keyword">pid</span>    //堆中活动的对象以及大小</span><br><span class="line">jmap -heap <span class="keyword">pid</span>  //查看堆的使用状况信息</span><br></pre></td></tr></table></figure><hr><h3 id="jconsole"><a href="#jconsole" class="headerlink" title="jconsole"></a>jconsole</h3><h4 id="功能-5"><a href="#功能-5" class="headerlink" title="功能"></a>功能</h4><p>用java写的GUI程序，用来监控VM，并可监控远程的VM，非常易用，而且功能非常强.</p><h4 id="常用命令-5"><a href="#常用命令-5" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用法命令行(<span class="keyword">cmd</span><span class="bash">)里打 jconsole，选则相应的进程就行了</span></span><br></pre></td></tr></table></figure><hr><h3 id="jvisualvm"><a href="#jvisualvm" class="headerlink" title="jvisualvm"></a>jvisualvm</h3><h4 id="功能-6"><a href="#功能-6" class="headerlink" title="功能"></a>功能</h4><p>用来监控JVM的运行情况，可以用它来查看和浏览Heap、Dump、ThreadDump、内存对象实例情况、GC执行情况、CPU消耗以及类的装载情况。该工具位于JDK根目录的bin文件夹下面，无需安装，正常装完jdk吼直接在bin目录下运行jvisual.exe即可.</p><h4 id="常用命令-6"><a href="#常用命令-6" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用法命令行(<span class="keyword">cmd</span><span class="bash">)里打 jvisualvm，选则相应的进程就可以(功能远比jconsole强大)</span></span><br></pre></td></tr></table></figure><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><p>（1）概述：显示当前服务器(resin)的整体运行状况<br><img src="https://note.youdao.com/yws/res/1191/WEBRESOURCEd43fc2c1434cfc4a7c05e9a9e859bb94" alt="概述.png"></p><p>（2）监视：可实时动态显示cpu、堆栈、类、线程的相关信息(类似于jconsole的升级版)<br><img src="https://note.youdao.com/yws/res/1191/WEBRESOURCEd43fc2c1434cfc4a7c05e9a9e859bb94" alt="概述.png"></p><p>（3）线程：可实时动态的现实进程的使用状况<br><img src="https://note.youdao.com/yws/res/1191/WEBRESOURCEd43fc2c1434cfc4a7c05e9a9e859bb94" alt="概述.png"><br>点击[==线程Dump==]按钮 可以显示具体的进程的内容，可从此页面查看到进程的具体信息以及报错信息(类似于jstack命令的查看结果)<br><img src="https://note.youdao.com/yws/res/1205/WEBRESOURCE6a2316d766a3ab399772cf9bba57a4ee" alt="线程Dump.png"></p><p>（4）：显示当前服务器(resin)的整体运行状况<br><img src="https://note.youdao.com/yws/res/1191/WEBRESOURCEd43fc2c1434cfc4a7c05e9a9e859bb94" alt="概述.png"></p><hr><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p>1.<a href="https://blog.csdn.net/u012550080/article/details/81605189" target="_blank" rel="noopener">https://blog.csdn.net/u012550080/article/details/81605189</a><br>2.<a href="http://www.51testing.com/html/38/n-3724238.html" target="_blank" rel="noopener">http://www.51testing.com/html/38/n-3724238.html</a><br>3.<a href="https://blog.51cto.com/zero01/2141942" target="_blank" rel="noopener">https://blog.51cto.com/zero01/2141942</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;JVM性能分析常用的命令，包括jstack(查看jvm线程运行状态)、jps(显示本地的java进程及对应进程号)、jstat(监视VM内存工具)、jinfo(输出并修改运行时的java进程的opts)、jmap(查看堆内存使用状况)、jconsole(java GUI监视工具)、jvisualvm(JVM运行监控工具)&lt;br&gt;注意：在使用这些工具前，先用JPS命令获取当前的每个JVM进程号[pid]，然后选择要查看的JVM&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://luxiong-github.github.io/categories/Java/"/>
    
      <category term="JVM" scheme="https://luxiong-github.github.io/categories/Java/JVM/"/>
    
    
      <category term="java" scheme="https://luxiong-github.github.io/tags/java/"/>
    
      <category term="JVM" scheme="https://luxiong-github.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Java线程的七种状态</title>
    <link href="https://luxiong-github.github.io/2018/11/04/java/java-thread/"/>
    <id>https://luxiong-github.github.io/2018/11/04/java/java-thread/</id>
    <published>2018-11-04T06:35:46.000Z</published>
    <updated>2019-09-09T12:59:55.399Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>本文简单介绍一下Java线程的七种状态</p></blockquote><a id="more"></a><h3 id="Java线程有7种状态，分别是"><a href="#Java线程有7种状态，分别是" class="headerlink" title="Java线程有7种状态，分别是:"></a>Java线程有7种状态，分别是:</h3><h4 id="1-新建状态-new"><a href="#1-新建状态-new" class="headerlink" title="1. 新建状态(new)"></a>1. 新建状态(new)</h4><p>（1）使用new操作符新创建的一个线程对象，例如<code>new Thread()</code>;<br>（2）处于新建状态的线程，内部的任务代码还没开始运行.</p><h4 id="2-可执行-就绪状态-Runnable"><a href="#2-可执行-就绪状态-Runnable" class="headerlink" title="2. 可执行/就绪状态(Runnable)"></a>2. 可执行/就绪状态(Runnable)</h4><p>（1）新创建的线程并不自动开始运行，要执行线程，必须调用线程的<code>start()</code>方法。当调用了线程对象的<code>start()</code>方法即启动了线程，此时线程就处于就绪状态;<br>（2）处于就绪状态的线程并不一定立即运行<code>run()</code>方法，线程还必须==同其他就绪线程竞争CPU==，只有==获得CPU使用权才可以运行线程==;<br>（3）线程阻塞状态(Blocked)结束后也可以变成就绪状态，或从运行状态(Running)变化到就绪状态.</p><h4 id="3-运行状态-Running"><a href="#3-运行状态-Running" class="headerlink" title="3. 运行状态(Running)"></a>3. 运行状态(Running)</h4><p>（1）线程获取到CPU使用权进行执行;<br>（2）需要注意的是，==线程只能从就绪状态进入到运行状态==,真正开始执行run()方法的内容.</p><h4 id="4-阻塞状态-Blocked"><a href="#4-阻塞状态-Blocked" class="headerlink" title="4. 阻塞状态(Blocked)"></a>4. 阻塞状态(Blocked)</h4><p>（1）线程在获取锁失败时(因为锁被其它线程抢占)，它会被加入锁的同步阻塞队列，然后线程进入阻塞状态(Blocked);<br>（2）待其它线程释放锁之后，阻塞状态(Blocked)的线程将在次参与锁的竞争，如果==竞争锁成功==，==线程将进入就绪状态==(Runnable),之后才有机会转到运行状态(Running).</p><h4 id="5-等待状态-Waiting"><a href="#5-等待状态-Waiting" class="headerlink" title="5. 等待状态(Waiting)"></a>5. 等待状态(Waiting)</h4><p>（1）线程执行<code>wait()</code>方法，JVM会把该线程放入等待队列(waitting queue)中,进入等待状态;<br>（2）处于等待状态的线程将不会被CPU执行，除非线程的运行条件得到满足后，其==可被其他线程唤醒==，进入阻塞状态(Blocked);<br>（3）调用不带超时的<code>Thread.join()</code>方法也会进入等待状态.</p><h4 id="6-睡眠-Sleep"><a href="#6-睡眠-Sleep" class="headerlink" title="6. 睡眠(Sleep)"></a>6. 睡眠(Sleep)</h4><p>（1）睡眠是等待状态的一种特例，在调用<code>Thread.sleep()</code>方法，带有超时设定的<code>Object.wait()</code>方法，带有超时设定的<code>Thread.join()</code>方法等，线程会进入睡眠状态(Sleep);<br>（2）睡眠状态进程达到设置时间的等待时间后，睡眠线程将==自动唤醒进入阻塞状态==(Blocked)或就绪状态(Runnable).</p><h4 id="7-死亡-Dead"><a href="#7-死亡-Dead" class="headerlink" title="7. 死亡(Dead)"></a>7. 死亡(Dead)</h4><p>（1）线程执行完了或者因异常退出了<code>run()</code>方法，该线程结束生命周期,死亡的线程==不可再次复生==. </p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p>1.<a href="https://baijiahao.baidu.com/s?id=1626410873162104506&wfr=spider&for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1626410873162104506&amp;wfr=spider&amp;for=pc</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;本文简单介绍一下Java线程的七种状态&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://luxiong-github.github.io/categories/Java/"/>
    
      <category term="Thread" scheme="https://luxiong-github.github.io/categories/Java/Thread/"/>
    
    
      <category term="java" scheme="https://luxiong-github.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="https://luxiong-github.github.io/2018/09/23/study/markdown01/"/>
    <id>https://luxiong-github.github.io/2018/09/23/study/markdown01/</id>
    <published>2018-09-23T06:20:20.000Z</published>
    <updated>2019-09-02T01:58:02.450Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>简单介绍一下Markdown的基本语法(未完善，待补充…)</p></blockquote><a id="more"></a><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在想要设置为标题的文字前面加<code>#</code>来表示<br>注：标准语法一般在#后跟个空格再写文字<br>（1）示例：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><p>（2）效果：<br>由于标题演示效果会影响目录结构，故不展示效果</p><hr><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>（1）简介</p><ul><li><strong>加粗</strong><br>要加粗的文字左右分别用两个*号包起来</li><li><strong>斜体</strong><br>要加粗的文字左右分别用一个*号包起来</li><li><strong>斜体加粗</strong><br>要倾斜和加粗的文字左右分别用三个*号包起来</li><li><strong>删除线</strong><br>要加删除线的文字左右分别用两个~~号包起来</li></ul><p>（2）示例：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*<span class="strong">*这是加粗的文字*</span><span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>这是倾斜的文字<span class="strong">*`</span></span><br><span class="line"><span class="strong">*</span>*<span class="strong">*这是斜体加粗的文字*</span>*<span class="strong">*</span></span><br><span class="line"><span class="strong">~~这是加删除线的文字~~</span></span><br></pre></td></tr></table></figure><p>（3）效果：<br><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del></p><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在引用的文字前加&gt;即可。<br>引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;等等</p><p>（1）示例：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line"><span class="meta">&gt;&gt;</span>这是引用的内容</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><p>（2）效果：  </p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><hr><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>三个或者三个以上的 - 或者 * 都可以</p><p>（1）示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span><span class="meta">---</span></span><br><span class="line"><span class="string">***</span></span><br><span class="line"><span class="string">*****</span></span><br></pre></td></tr></table></figure><p>（2）效果：</p><hr><hr><hr><hr><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>（1）简介<br>基本语法：<code>![图片alt](图片URL&quot;图片title&quot;&quot;)</code><br>图片alt:显示在图片下面的文字，相当于对图片内容的解释;<br>图片URL:图片的链接URL<br>图片title:当鼠标移到图片上时显示的内,title可加可不加(==URL和title之间有个空格==)</p><p>（2）示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">这是一张示例图片</span>](<span class="link">https://ibb.co/album/kshZBF  ''海贼王''</span>)</span><br></pre></td></tr></table></figure><p>（3）效果：<br><img src="https://i.ibb.co/zScQPd0/6.jpg" alt="这是一张示例图片" title="海贼王"></p><p>图片必须配合链接使用，所以必须有一个好的图床工具： </p><ol><li>七牛云：<a href="https://www.qiniu.com/" target="_blank" rel="noopener">https://www.qiniu.com/</a></li><li>ImgBB：<a href="https://imgbb.com/" target="_blank" rel="noopener">https://imgbb.com/</a></li><li>聚合图床：<a href="https://www.superbed.cn/" target="_blank" rel="noopener">https://www.superbed.cn/</a><br>百度直接搜索关键字“免费图床”，可以搜到一堆</li></ol><hr><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><h3 id="初级链接"><a href="#初级链接" class="headerlink" title="初级链接"></a>初级链接</h3><p>（1）基本语法：<code>[超链接名](超链接URL &quot;超链接title&quot;)</code><br>title可加可不加,语法参照图片  </p><p>（2）示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">简书</span>](<span class="link">http://jianshu.com</span>)</span><br><span class="line">[<span class="string">百度</span>](<span class="link">http://baidu.com</span>)</span><br></pre></td></tr></table></figure><p>（3）效果：<br><a href="http://jianshu.com" target="_blank" rel="noopener">简书</a><br><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><h3 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h3><p>（1）示例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">链接也可以用变量来代替，文档末尾附带变量地址：</span><br><span class="line">这个链接用 1 作为网址变量 [<span class="string">Google</span>][<span class="symbol">1</span>]</span><br><span class="line">这个链接用 runoob 作为网址变量 [<span class="string">Runoob</span>][<span class="symbol">runoob</span>]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http://www.google.com/</span><br><span class="line">  [runoob]: http://www.runoob.com/</span><br></pre></td></tr></table></figure><p>（2）效果<br><a href="http://www.baidu.com/" target="_blank" rel="noopener">百度</a><br><a href="http://jianshu.com" target="_blank" rel="noopener">简书</a>  </p><p>注：Markdown本身语法不支持链接在新页面中打开，如果想要在新页面中打开的话可以用html语言的a标签代替。例如：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">示例</span><br><span class="line">&lt;a <span class="attribute">href</span>=<span class="string">"https://www.jianshu.com/u/1f5ac0cf6a8b"</span> <span class="attribute">target</span>=<span class="string">"_blank"</span>&gt;简书&lt;/a&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表分为无序列表和有序列表</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表用 - + * 任何一种都可以  </p><p>（1）示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>列表内容</span><br><span class="line"><span class="bullet">+ </span>列表内容</span><br><span class="line"><span class="bullet">* </span>列表内容</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>（2）效果：</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>数字加点 </p><p>（1）示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>列表内容</span><br><span class="line"><span class="bullet">2. </span>列表内容</span><br><span class="line"><span class="bullet">3. </span>列表内容</span><br><span class="line"></span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>（2）效果：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><p>注意：序号跟内容之间要有空格 </p><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><ul><li>一级无序列表<ul><li>二级无序列表</li><li>二级无序列表</li></ul></li><li>一级无序列表<ol><li>二级有序列表</li><li>二级有序列表</li></ol></li></ul><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>（1）语法：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头|<span class="string">表头</span>|<span class="string">表头</span></span><br><span class="line"><span class="string">---</span>|<span class="string">:--:</span>|<span class="string">---:</span></span><br><span class="line"><span class="string">内容</span>|<span class="string">内容</span>|<span class="string">内容</span></span><br><span class="line"><span class="string">内容</span>|<span class="string">内容</span>|<span class="string">内容</span></span><br><span class="line"></span><br><span class="line"><span class="string">第二行分割表头和内容。</span></span><br><span class="line"><span class="string">- 有一个就行，为了对齐，多加了几个</span></span><br><span class="line"><span class="string">文字默认居左</span></span><br><span class="line"><span class="string">-两边加：表示文字居中</span></span><br><span class="line"><span class="string">-右边加：表示文字居右</span></span><br><span class="line"><span class="string">注：原生的语法两边都要用 </span>|<span class="string"> 包起来。此处省略</span></span><br></pre></td></tr></table></figure><p>（2）示例：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名|<span class="string">技能</span>|<span class="string">排行</span></span><br><span class="line"><span class="string">--</span>|<span class="string">:--:</span>|<span class="string">--:</span></span><br><span class="line"><span class="string">刘备</span>|<span class="string">哭</span>|<span class="string">大哥</span></span><br><span class="line"><span class="string">关羽</span>|<span class="string">打</span>|<span class="string">二哥</span></span><br><span class="line"><span class="string">张飞</span>|<span class="string">骂</span>|<span class="string">三弟</span></span><br></pre></td></tr></table></figure><p>（3）效果：<br>姓名|技能|排行<br>–|:–:|–:<br>刘备|哭|大哥<br>关羽|打|二哥<br>张飞|骂|三弟</p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="单行代码"><a href="#单行代码" class="headerlink" title="单行代码"></a>单行代码</h3><p>代码之间分别用一个反引号包起来<br>（1）示例：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`<span class="keyword">create</span> <span class="keyword">database</span> hero;`</span><br></pre></td></tr></table></figure><p>（2）效果：<br><code>create database hero;</code></p><h3 id="多行代码"><a href="#多行代码" class="headerlink" title="多行代码"></a>多行代码</h3><p>代码之间分别用三个反引号包起来，且两边的反引号单独占一行<br>示例及效果：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    echo <span class="string">"这是一句非常牛逼的代码"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><hr><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><h3 id="流程图-1"><a href="#流程图-1" class="headerlink" title="流程图"></a>流程图</h3><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><hr><h2 id="待办事项"><a href="#待办事项" class="headerlink" title="待办事项"></a>待办事项</h2><p><code>- [x]</code>：表示已完成<br><code>- [ ]</code>：表示未完成<br>（1）示例：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- <span class="string">[x]</span> 已完成项目<span class="number">1</span></span><br><span class="line">  - <span class="string">[x]</span> 已完成事项<span class="number">1</span></span><br><span class="line">  - <span class="string">[x]</span> 已完成事项<span class="number">2</span></span><br><span class="line">- <span class="string">[ ]</span> 待完成项目<span class="number">1</span></span><br><span class="line">  - <span class="string">[ ]</span> 待完成事项<span class="number">1</span></span><br><span class="line">  - <span class="string">[ ]</span> 待完成事项<span class="number">2</span></span><br></pre></td></tr></table></figure><p>（2）效果：</p><ul><li><input checked disabled type="checkbox"> 已完成项目1<ul><li><input checked disabled type="checkbox"> 已完成事项1</li><li><input checked disabled type="checkbox"> 已完成事项2</li></ul></li><li><input disabled type="checkbox"> 待完成项目1<ul><li><input disabled type="checkbox"> 待完成事项1</li><li><input disabled type="checkbox"> 待完成事项2</li></ul></li></ul><hr><h2 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h2><h3 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h3><p>（1）简介<br>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等<br>（2）示例</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>test<span class="tag">&lt;/<span class="name">b</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>test<span class="tag">&lt;/<span class="name">i</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>test<span class="tag">&lt;/<span class="name">em</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>test<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>test<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>test<span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（3）效果<br><b>test</b><br><i>test</i><br><em>test</em><br><sup>test</sup><br><sub>test</sub><br><br>test<br>  </p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>（1）简介<br>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符<br>（2）示例</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**文本加粗**   </span><br><span class="line"><span class="symbol">\*</span><span class="symbol">\*</span> 正常显示星号 <span class="symbol">\*</span><span class="symbol">\*</span></span><br></pre></td></tr></table></figure><p>（3）效果<br><strong>文本加粗</strong><br>** 正常显示星号 **</p><hr><p><strong>参考文档</strong>：<br>1.<a href="http://note.youdao.com/iyoudao/?p=2411" target="_blank" rel="noopener">有道云笔记Markdown指南</a><br>2.<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;简单介绍一下Markdown的基本语法(未完善，待补充…)&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="实用技术" scheme="https://luxiong-github.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Markdown教程" scheme="https://luxiong-github.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/Markdown%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Note" scheme="https://luxiong-github.github.io/tags/Note/"/>
    
      <category term="Markdown" scheme="https://luxiong-github.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>博客插件、展望</title>
    <link href="https://luxiong-github.github.io/2018/09/04/hexo/hexo-blog04/"/>
    <id>https://luxiong-github.github.io/2018/09/04/hexo/hexo-blog04/</id>
    <published>2018-09-04T06:35:46.000Z</published>
    <updated>2019-09-09T16:29:22.188Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>介绍博客的一些用法、功能以及相关插件…</p></blockquote><a id="more"></a><h3 id="相关插件"><a href="#相关插件" class="headerlink" title="相关插件"></a>相关插件</h3><h4 id="Hexo相关初始化配置"><a href="#Hexo相关初始化配置" class="headerlink" title="Hexo相关初始化配置"></a>Hexo相关初始化配置</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><h4 id="安装自动部署发布工具"><a href="#安装自动部署发布工具" class="headerlink" title="安装自动部署发布工具"></a>安装自动部署发布工具</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h4 id="分页插件"><a href="#分页插件" class="headerlink" title="分页插件"></a>分页插件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-index</span></span><br><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-archive</span></span><br><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-tag</span></span><br><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-category</span></span><br></pre></td></tr></table></figure><h4 id="文章字数与阅读时长-wordcount-插件"><a href="#文章字数与阅读时长-wordcount-插件" class="headerlink" title="文章字数与阅读时长 wordcount 插件"></a>文章字数与阅读时长 wordcount 插件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-wordcount <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h4 id="RSS订阅功能"><a href="#RSS订阅功能" class="headerlink" title="RSS订阅功能"></a>RSS订阅功能</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h4 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-searchdb</span></span><br></pre></td></tr></table></figure><h4 id="Gitment评论"><a href="#Gitment评论" class="headerlink" title="Gitment评论"></a>Gitment评论</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="selector-tag">i</span> --save gitment</span><br></pre></td></tr></table></figure><h4 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-blog-encrypt</span></span><br></pre></td></tr></table></figure><hr><h3 id="图片上传相册"><a href="#图片上传相册" class="headerlink" title="图片上传相册"></a>图片上传相册</h3><h4 id="git连接远程Blog-Album"><a href="#git连接远程Blog-Album" class="headerlink" title=" git连接远程Blog_Album"></a><a id="update"> git连接远程Blog_Album</a></h4><blockquote><p>此小块所有命令均在<code>Blog_Album</code>目录下打开终端执行<br>(1) 执行<code>git remote add origin https://github.com/luxiong-github/Blog_Album.git</code>为本地仓库添加一个远程仓库<br>如果此处出现<code>fatal: remote origin already exists.</code>错误，说明远程起源已经存在，则先执行<code>git remote rm origin</code>再执行上述命令<br>(2) 拉取远程仓库代码：<code>git pull --rebase origin master</code>(远程仓库被更新本地没更新才需要执行)<br><code>git pull --rebase origin master</code></p></blockquote><h4 id="上传照片"><a href="#上传照片" class="headerlink" title="上传照片"></a>上传照片</h4><p>(1) 将照片放到<code>Blog_Album\photos</code>目录中，命名格式：yyyy-MM-dd_des.jpg/jpeg/gif/png.(脚本解析jpg有问题，最好使用png)<br>(2) 终端切换到<code>Blog_Album</code>目录下(或者直接在Blog_Album目录下<code>shift+鼠标右键</code>打开PowerShell窗口),执行<code>python tool.py</code>命令</p><blockquote><p>如果出现<code>error: failed to push some refs to</code>错误，说明本地没有update到最新版本的项目（git上有README.md文件没下载下来）,<a href="#update">执行此处命令</a><br>(3) 如果上述命令执行无误，则可进入自己GitHub的<code>Blog_Album</code>仓库中进行查看<br>(4) hexo g  &amp;&amp;  hexo s进入博客查看</p></blockquote><p>参考：<a href="https://malizhi.cn/HexoAlbum/" target="_blank" rel="noopener">https://malizhi.cn/HexoAlbum/</a></p><hr><h3 id="源码提交gitee"><a href="#源码提交gitee" class="headerlink" title="源码提交gitee"></a>源码提交gitee</h3><p>(1) <code>my-blog</code>目录下打开终端，输入命令初始化创建一个空的本地仓库：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git init</span></span><br></pre></td></tr></table></figure><p>(2) 将本地库与远程仓库(gitee)进行链接：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">add</span> origin http<span class="variable">s:</span>//gitee.<span class="keyword">com</span>/luxiong-gitee/blog-code.git</span><br></pre></td></tr></table></figure><p>(3) 将项目的所有文件添加到缓存中：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> .</span></span><br></pre></td></tr></table></figure><p>(4) 将缓存中的文件Commit到git库：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> commit -m <span class="string">"项目源码上传"</span></span><br></pre></td></tr></table></figure><p>(5) 上传代码之前最好先pull一下(拉取远程仓库最新代码)：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin <span class="literal">master</span></span><br></pre></td></tr></table></figure><p>(6) 代码提交到远程库：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure><h3 id="待优化项目"><a href="#待优化项目" class="headerlink" title="待优化项目"></a>待优化项目</h3><ul><li><p>Fork me on GitHub</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"https://github.com/luxiong-github"</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">img</span> <span class="attribute">width</span>=<span class="string">"149"</span> height=<span class="string">"149"</span> src=<span class="string">"https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149"</span> class=<span class="string">"attachment-full size-full"</span> alt=<span class="string">"Fork me on GitHub"</span> data-recalc-dims=<span class="string">"1"</span>&gt;</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>流程图  </p></li><li><p>相册  <a href="https://malizhi.cn/HexoAlbum/" target="_blank" rel="noopener">https://malizhi.cn/HexoAlbum/</a></p></li><li><p><a href="https://www.jianshu.com/p/7f6425b3ffb2" target="_blank" rel="noopener">https://www.jianshu.com/p/7f6425b3ffb2</a></p></li><li><p>URL优化</p></li><li><p>站点提交百度、Google  <a href="https://malizhi.cn/nextTutorial/#more" target="_blank" rel="noopener">https://malizhi.cn/nextTutorial/#more</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;介绍博客的一些用法、功能以及相关插件…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo个人博客搭建" scheme="https://luxiong-github.github.io/categories/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Blog" scheme="https://luxiong-github.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://luxiong-github.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://luxiong-github.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://luxiong-github.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建-加强</title>
    <link href="https://luxiong-github.github.io/2018/09/02/hexo/hexo-blog03/"/>
    <id>https://luxiong-github.github.io/2018/09/02/hexo/hexo-blog03/</id>
    <published>2018-09-02T06:35:46.000Z</published>
    <updated>2019-09-05T02:33:47.098Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>给博客增加一些更高级的功能，例如分页、站内搜索、评论…</p></blockquote><a id="more"></a><h3 id="Hexo文章加密"><a href="#Hexo文章加密" class="headerlink" title="Hexo文章加密"></a>Hexo文章加密</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>(1) 尝试着想一下，你写了一篇博客，但是，出于某种原因，不太希望每一个人都可以看到他。所以你常常会为这种文章设置一个密码，其他人需要输入密码才可以访问这篇博客。所以<code>Hexo-Blog-Encrypt</code> 因为这个需求而诞生了<br>(2) 一旦你输入了正确的密码，你可以在接下来的 30 分钟内，无需密码访问该网页</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>(1) 命令：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span>--save hexo-<span class="keyword">blog-encrypt </span>   <span class="comment"># npm安装</span></span><br><span class="line"></span><br><span class="line">yarn <span class="keyword">add </span>hexo-<span class="keyword">blog-encrypt </span>             <span class="comment"># yarn安装</span></span><br></pre></td></tr></table></figure><p>(2) 在站点配置文件<code>_config.yml</code>中添加插件配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tags:</span>  <span class="comment"># 配置标签加密</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">&#123;name:</span> <span class="string">test,</span> <span class="attr">password:</span> <span class="string">test&#125;</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">&#123;name:</span> <span class="string">diary,</span> <span class="attr">password:</span> <span class="string">diary&#125;</span></span><br></pre></td></tr></table></figure><p>(3) 文章头部添加对应字段，如password, abstract, message：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016</span><span class="bullet">-03</span><span class="bullet">-30</span> <span class="number">21</span><span class="string">:18:02</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">mikemessi</span> <span class="comment"># 该博客加密使用的密码</span></span><br><span class="line"><span class="attr">abstract:</span> <span class="string">Something</span> <span class="string">was</span> <span class="string">encrypted,</span> <span class="string">please</span> <span class="string">enter</span> <span class="string">password</span> <span class="string">to</span> <span class="string">read.</span>   <span class="comment">#该博客的摘要，会显示在博客的列表页</span></span><br><span class="line"><span class="attr">message:</span> <span class="string">Welcome</span> <span class="string">to</span> <span class="string">my</span> <span class="string">blog,</span> <span class="string">please</span> <span class="string">enter</span> <span class="string">password</span> <span class="string">to</span> <span class="string">read.</span> <span class="comment">#博客查看时，密码输入框上面的描述性文字</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>(4) <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>，来查看效果</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>(1) 文章设置的password优先级最高，其次是设置标签加密，文章多标签加密密码优先级跟文章标签先后顺序有关<br>(2) 密码的有效时间是30分钟<br>(3) 插件还可以对<code>TOC</code>进行加密以及修改加密模板，详情见参考链接<br>(4) 加密后的文章可能会有不显示文章目录的bug，解决方案：将<code>next/layout/_macro/sidebar.swig</code>替换为<a href="https://blog.csdn.net/crazy_scott/article/details/80996427" target="_blank" rel="noopener">这个博客</a>中的文件</p><p>参考链接：<a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></p><hr><h3 id="Valine评论"><a href="#Valine评论" class="headerlink" title="Valine评论"></a>Valine评论</h3><h4 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h4><p>Next主题，本身就已经集成了valine，因此正常情况下只需要配置一下就行了，<code>不用安装</code>，需要安装的可以使用以下命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install leancloud's js-sdk</span></span><br><span class="line">npm <span class="keyword">install</span> leancloud-<span class="keyword">storage</span> <span class="comment">--save</span></span><br><span class="line"><span class="comment"># Install valine</span></span><br><span class="line">npm <span class="keyword">install</span> valine <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h4 id="Leancloud配置"><a href="#Leancloud配置" class="headerlink" title="Leancloud配置"></a>Leancloud配置</h4><p>(1) 之前的文章次数统计已经配置过了，这里只需要进入<a href="https://leancloud.cn/" target="_blank" rel="noopener">Leancloud</a>获取对应的<code>APP ID</code>和<code>APP KEY</code>就行了<br>(2) 修改主题配置文件<code>hexo\themes\next\_config.yml</code>，修改以下参数：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span> <span class="string">//打开valine评论功能</span></span><br><span class="line"><span class="attr">  appid:</span> <span class="string">你的leancloud</span> <span class="string">appid</span> </span><br><span class="line"><span class="attr">  appkey:</span> <span class="string">你的leancloud</span> <span class="string">appkey</span> </span><br><span class="line"><span class="attr">  notify:</span> <span class="literal">false</span> <span class="string">//邮件提醒</span></span><br><span class="line"><span class="attr">  verify:</span> <span class="literal">true</span> <span class="string">//评论时是否有验证码，需要在Leancloud</span> <span class="string">设置-&gt;安全中心</span> <span class="string">中打开</span></span><br><span class="line"><span class="attr">  placeholder:</span> <span class="string">说点什么吧！</span> <span class="string">//评论框默认显示</span></span><br><span class="line"><span class="attr">  avatar:</span> <span class="string">monsterid</span> <span class="string">//评论者的头像</span></span><br><span class="line"><span class="attr">  guest_info:</span> <span class="string">nick</span> <span class="comment"># custom comment header</span></span><br><span class="line"><span class="attr">  pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure><p>(3) 评论者头像<code>avatar</code>取值与显示效果如下：<br><img src="https://i.ibb.co/QXTNR0c/grbkdj-13.png" alt="valine头像"></p><!-- #### Valine 扩展之邮件通知(待改进)http://www.zhaojun.im/hexo-valine-admin/#### Valine加强(待改进)https://deserts.io/diy-a-comment-system/ --><hr><!-- ### hexo管理插件#### hexo-admin参考：  （1）https://github.com/jaredly/hexo-admin  （2）https://blog.csdn.net/dataiyangu/article/details/83066586--- --><h3 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h3><blockquote><p>注：Next主题默认是不含有相册页面的,如果想添加此页面需自行编写</p></blockquote><h4 id="相册和视频导航栏"><a href="#相册和视频导航栏" class="headerlink" title="相册和视频导航栏"></a>相册和视频导航栏</h4><p>LTAIC4oDgY9ZCa0n<br>0nEgVvA7KLV7QUfV1vMgjF4U4JvxM2</p><h4 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h4><h4 id="博客相册页面"><a href="#博客相册页面" class="headerlink" title="博客相册页面"></a>博客相册页面</h4><h4 id="图片的处理"><a href="#图片的处理" class="headerlink" title="图片的处理"></a>图片的处理</h4><hr><h3 id="小功能集合"><a href="#小功能集合" class="headerlink" title="小功能集合"></a>小功能集合</h3><h4 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h4><p>hexo默认提供的文章链接方案是使用年/月/日/标题，也许你会数次更改文章题目或者变更文章发布时间，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择<br>(1) 安装插件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-abbrlink <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>(2) 在站点配置文件中查找代码<code>permalink</code>，将其更改为:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> posts/<span class="symbol">:abbrlink/</span>  <span class="comment"># “posts/” 可自行更换</span></span><br></pre></td></tr></table></figure><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>(1) <a href="https://malizhi.cn/HexoAlbum/" target="_blank" rel="noopener">https://malizhi.cn/HexoAlbum/</a><br>(2) <a href="https://www.jianshu.com/p/7f6425b3ffb2" target="_blank" rel="noopener">https://www.jianshu.com/p/7f6425b3ffb2</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;给博客增加一些更高级的功能，例如分页、站内搜索、评论…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo个人博客搭建" scheme="https://luxiong-github.github.io/categories/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Blog" scheme="https://luxiong-github.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://luxiong-github.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://luxiong-github.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://luxiong-github.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建-完善</title>
    <link href="https://luxiong-github.github.io/2018/08/31/hexo/hexo_blog02/"/>
    <id>https://luxiong-github.github.io/2018/08/31/hexo/hexo_blog02/</id>
    <published>2018-08-31T05:35:46.000Z</published>
    <updated>2019-09-03T17:08:28.186Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>给博客增加一些更高级的功能，例如分页、站内搜索、评论…</p></blockquote><a id="more"></a><h3 id="细节完善"><a href="#细节完善" class="headerlink" title="细节完善"></a>细节完善</h3><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><p>(1) 插件安装(按需安装)</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-index     # 首页分页配置</span><br><span class="line"># npm install --save hexo-generator-archive # 归档分页配置</span><br><span class="line"># npm install --save hexo-generator-tag     # 标签分页配置</span><br></pre></td></tr></table></figure><p>(2) 站点配置文件：</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">''</span></span><br><span class="line">  per_page: <span class="number">5</span></span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"><span class="meta">#archive_generator:</span></span><br><span class="line"><span class="meta">#  per_page: 20</span></span><br><span class="line"><span class="meta">#  yearly: true</span></span><br><span class="line"><span class="meta">#  monthly: true</span></span><br><span class="line"><span class="meta">#tag_generator:</span></span><br><span class="line"><span class="meta">#  per_page: 10</span></span><br></pre></td></tr></table></figure><p>(3) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>，查看效果</p><h4 id="文章相关"><a href="#文章相关" class="headerlink" title="文章相关"></a>文章相关</h4><blockquote><p>详情请参考：<a href="https://tianbozhang.coding.me/personal-blog-custom.html" target="_blank" rel="noopener">https://tianbozhang.coding.me/personal-blog-custom.html</a></p></blockquote><h4 id="分页-1"><a href="#分页-1" class="headerlink" title="分页"></a>分页</h4><p>(1) 插件安装(按需安装)</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-index     # 首页分页配置</span><br><span class="line"># npm install --save hexo-generator-archive # 归档分页配置</span><br><span class="line"># npm install --save hexo-generator-tag     # 标签分页配置</span><br></pre></td></tr></table></figure><p>(2) 站点配置文件：</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">''</span></span><br><span class="line">  per_page: <span class="number">5</span></span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"><span class="meta">#archive_generator:</span></span><br><span class="line"><span class="meta">#  per_page: 20</span></span><br><span class="line"><span class="meta">#  yearly: true</span></span><br><span class="line"><span class="meta">#  monthly: true</span></span><br><span class="line"><span class="meta">#tag_generator:</span></span><br><span class="line"><span class="meta">#  per_page: 10</span></span><br></pre></td></tr></table></figure><p>(3) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>，查看效果</p><h4 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h4><p>(1) 修改<code>hexo-generator-index</code>插件<br>将<code>node_modules/hexo-generator-index/lib/generator.js</code>文件替换为：<a href="https://github.com/ehlxr/java-utils/blob/master/resources/generator.js" target="_blank" rel="noopener">generator.js</a><br>(2)<br>在文章<code>Front-matter</code>中添加<code>top</code>值，数值越大文章越靠前，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Naruto</span> <span class="string">图集</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">[图片]</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[picture,naruto]</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016</span><span class="bullet">-09</span><span class="bullet">-02</span> <span class="number">14</span><span class="string">:36:04</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">picture,naruto</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">10</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h4 id="头像圆形旋转"><a href="#头像圆形旋转" class="headerlink" title="头像圆形旋转"></a>头像圆形旋转</h4><p>介绍一下实现头像圆形，鼠标经过旋转或者一直让旋转效果，主要是修改hexo目录下<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>文件<br>(1) 头像圆形修改<br>修改<code>sidebar-author.styl</code>文件中<code>.site-author-image</code>CSS 样式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*头像圆形*/</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(2) 鼠标经过旋转修改<br>修改<code>sidebar-author.styl</code>文件，添加 CSS 样式<code>img:hover</code>如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>sidebar-author.styl</code>文件中<code>.site-author-image</code>CSS 样式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(3) 鼠标经过旋转修改<br>修改<code>sidebar-author.styl</code>文件，添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>sidebar-author.styl</code>文件中<code>.site-author-image</code>CSS 样式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 设置循环动画：animation:动画名称 动画播放时长单位秒或微秒</span></span><br><span class="line"><span class="comment">    动画播放的速度曲线linear为匀速 动画播放次数infinite为循环播放; */</span></span><br><span class="line">  <span class="attribute">-webkit-animation</span>: play <span class="number">3s</span> linear infinite;</span><br><span class="line">  <span class="attribute">-moz-animation</span>: play <span class="number">3s</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: play <span class="number">3s</span> linear infinite;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度</span></span><br><span class="line"><span class="comment">  -webkit-transition: -webkit-transform 1.5s ease-out;</span></span><br><span class="line"><span class="comment">  -moz-transition: -moz-transform 1.5s ease-out;</span></span><br><span class="line"><span class="comment">  transition: transform 1.5s ease-out;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>鼠标经过停止头像旋转：修改<code>sidebar-author.styl</code>文件，添加 CSS 样式<code>img:hover</code>如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过停止头像旋转 */</span></span><br><span class="line">  <span class="attribute">-webkit-animation-play-state</span>:paused;</span><br><span class="line">  <span class="attribute">animation-play-state</span>:paused;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度</span></span><br><span class="line"><span class="comment">  -webkit-transform: rotateZ(360deg);</span></span><br><span class="line"><span class="comment">  -moz-transform: rotateZ(360deg);</span></span><br><span class="line"><span class="comment">  transform: rotateZ(360deg);*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="页面点击小红心"><a href="#页面点击小红心" class="headerlink" title="页面点击小红心"></a>页面点击小红心</h4><p>(1) 在<code>/themes/next/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把该链接下的代码拷贝粘贴到<code>clicklove.js</code>文件中。<br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面点击爱心效果</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>(2) 在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clicklove.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(3) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>检验效果</p><h4 id="动态title崩溃欺骗"><a href="#动态title崩溃欺骗" class="headerlink" title="动态title崩溃欺骗"></a>动态title崩溃欺骗</h4><p>(1) <code>\themes\next\source\js\src</code>，新建<code>custom-title.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"><span class="keyword">var</span> OriginTitile = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">   $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/img/TEP.ico"</span>);</span><br><span class="line">   <span class="built_in">document</span>.title = <span class="string">' 页面崩溃啦 ~ ！'</span>;</span><br><span class="line">   clearTimeout(titleTime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">   $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/favicon.ico"</span>);</span><br><span class="line">   <span class="built_in">document</span>.title = <span class="string">' 噫又好了~ '</span> + OriginTitile;</span><br><span class="line">   titleTime = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="built_in">document</span>.title = OriginTitile;&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>(2) 更改<code>\themes\next\layout_layout.swig</code>,在文件末尾添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--动态title崩溃欺骗,卖萌专用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/custom-title.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(3) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>检验效果</p><h4 id="High一下"><a href="#High一下" class="headerlink" title="High一下"></a>High一下</h4><p>(1) header位置更改<code>themes\next\layout_custom\header.swig</code>,在文件末尾添加：<br>sidebar位置更改<code>themes\next\layout_custom\sidebar.swig</code><br>(2) 添加以下内容：</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt; &lt;a title=<span class="string">"把这个链接拖到你的Chrome收藏夹工具栏中"</span> href='javascript:(<span class="keyword">function</span>() &#123;</span><br><span class="line"><span class="keyword">function</span> c() &#123;</span><br><span class="line"><span class="keyword">var</span> e = document.createElement(<span class="string">"link"</span>);</span><br><span class="line">e.setAttribute(<span class="string">"type"</span>, <span class="string">"text/css"</span>);</span><br><span class="line">e.setAttribute(<span class="string">"rel"</span>, <span class="string">"stylesheet"</span>);</span><br><span class="line">e.setAttribute(<span class="string">"href"</span>, f);</span><br><span class="line">e.setAttribute(<span class="string">"class"</span>, l);</span><br><span class="line">document.body.appendChild(e)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> h() &#123;</span><br><span class="line"><span class="keyword">var</span> e = document.getElementsByClassName(l);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.length; t++) &#123;</span><br><span class="line">document.body.removeChild(e[t])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> p() &#123;</span><br><span class="line"><span class="keyword">var</span> e = document.createElement(<span class="string">"div"</span>);</span><br><span class="line">e.setAttribute(<span class="string">"class"</span>, a);</span><br><span class="line">document.body.appendChild(e);</span><br><span class="line">setTimeout(<span class="keyword">function</span>() &#123;</span><br><span class="line">document.body.removeChild(e)</span><br><span class="line">&#125;, <span class="number">100</span>)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> d(e) &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">height : e.offsetHeight,</span><br><span class="line">width : e.offsetWidth</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> v(i) &#123;</span><br><span class="line"><span class="keyword">var</span> s = d(i);</span><br><span class="line"><span class="keyword">return</span> s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> m(e) &#123;</span><br><span class="line"><span class="keyword">var</span> t = e;</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!!t) &#123;</span><br><span class="line">n += t.offsetTop;</span><br><span class="line">t = t.offsetParent</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> g() &#123;</span><br><span class="line"><span class="keyword">var</span> e = document.documentElement;</span><br><span class="line"><span class="keyword">if</span> (!!window.innerWidth) &#123;</span><br><span class="line"><span class="keyword">return</span> window.innerHeight</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (e &amp;&amp; !isNaN(e.clientHeight)) &#123;</span><br><span class="line"><span class="keyword">return</span> e.clientHeight</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> y() &#123;</span><br><span class="line"><span class="keyword">if</span> (window.pageYOffset) &#123;</span><br><span class="line"><span class="keyword">return</span> window.pageYOffset</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Math.max(document.documentElement.scrollTop, document.body.scrollTop)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> E(e) &#123;</span><br><span class="line"><span class="keyword">var</span> t = m(e);</span><br><span class="line"><span class="keyword">return</span> t &gt;= w &amp;&amp; t &lt;= b + w</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> S() &#123;</span><br><span class="line"><span class="keyword">var</span> e = document.createElement(<span class="string">"audio"</span>);</span><br><span class="line">e.setAttribute(<span class="string">"class"</span>, l);</span><br><span class="line">e.src = i;</span><br><span class="line">e.loop = <span class="literal">false</span>;</span><br><span class="line">e.addEventListener(<span class="string">"canplay"</span>, <span class="keyword">function</span>() &#123;</span><br><span class="line">setTimeout(<span class="keyword">function</span>() &#123;</span><br><span class="line">x(k)</span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line">setTimeout(<span class="keyword">function</span>() &#123;</span><br><span class="line">N();</span><br><span class="line">p();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; O.length; e++) &#123;</span><br><span class="line">T(O[e])</span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="number">15500</span>)</span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br><span class="line">e.addEventListener(<span class="string">"ended"</span>, <span class="keyword">function</span>() &#123;</span><br><span class="line">N();</span><br><span class="line">h()</span><br><span class="line">&#125;, <span class="literal">true</span>);</span><br><span class="line">e.innerHTML = <span class="string">" &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;"</span>;</span><br><span class="line">document.body.appendChild(e);</span><br><span class="line">e.play()</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> x(e) &#123;</span><br><span class="line">e.className += <span class="string">" "</span> + s + <span class="string">" "</span> + o</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> T(e) &#123;</span><br><span class="line">e.className += <span class="string">" "</span> + s + <span class="string">" "</span> + u[Math.floor(Math.random() * u.length)]</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> N() &#123;</span><br><span class="line"><span class="keyword">var</span> e = document.getElementsByClassName(s);</span><br><span class="line"><span class="keyword">var</span> t = new RegExp(<span class="string">"\\b"</span> + s + <span class="string">"\\b"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; e.length; ) &#123;</span><br><span class="line">e[n].className = e[n].className.replace(t, <span class="string">""</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> e = <span class="number">30</span>;</span><br><span class="line"><span class="keyword">var</span> t = <span class="number">30</span>;</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">350</span>;</span><br><span class="line"><span class="keyword">var</span> r = <span class="number">350</span>;</span><br><span class="line"><span class="keyword">var</span> i = <span class="string">"//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3"</span>;</span><br><span class="line"><span class="keyword">var</span> s = <span class="string">"mw-harlem_shake_me"</span>;</span><br><span class="line"><span class="keyword">var</span> o = <span class="string">"im_first"</span>;</span><br><span class="line"><span class="keyword">var</span> u = [<span class="string">"im_drunk"</span>, <span class="string">"im_baked"</span>, <span class="string">"im_trippin"</span>, <span class="string">"im_blown"</span>];</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">"mw-strobe_light"</span>;</span><br><span class="line"><span class="keyword">var</span> f = <span class="string">"//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css"</span>;</span><br><span class="line"><span class="keyword">var</span> l = <span class="string">"mw_added_css"</span>;</span><br><span class="line"><span class="keyword">var</span> b = g();</span><br><span class="line"><span class="keyword">var</span> w = y();</span><br><span class="line"><span class="keyword">var</span> C = document.getElementsByTagName(<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">var</span> k = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> L = <span class="number">0</span>; L &lt; C.length; L++) &#123;</span><br><span class="line"><span class="keyword">var</span> A = C[L];</span><br><span class="line"><span class="keyword">if</span> (v(A)) &#123;</span><br><span class="line"><span class="keyword">if</span> (E(A)) &#123;</span><br><span class="line">k = A;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (A === <span class="literal">null</span>) &#123;</span><br><span class="line">console.warn(<span class="string">"Could not find a node of the right size. Please try a different page."</span>);</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c();</span><br><span class="line">S();</span><br><span class="line"><span class="keyword">var</span> O = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> L = <span class="number">0</span>; L &lt; C.length; L++) &#123;</span><br><span class="line"><span class="keyword">var</span> A = C[L];</span><br><span class="line"><span class="keyword">if</span> (v(A)) &#123;</span><br><span class="line">O.push(A)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)()    '&gt;High一下&lt;/a&gt; &lt;/li&gt;</span><br></pre></td></tr></table></figure><p>(3) 代码块的内容不需要再做任何修改,清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>查看效果</p><h4 id="底部增加运行时间"><a href="#底部增加运行时间" class="headerlink" title="底部增加运行时间"></a>底部增加运行时间</h4><p>(1) 修改<code>themes/next/layout/_partials/footer.swig</code>，增加如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在网页底部添加网站运行时间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"timeDate"</span>&gt;</span>载入天数...<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"times"</span>&gt;</span>载入时分秒...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">createtime</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> grt= <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"07/21/2018 00:00:00"</span>);<span class="comment">//此处修改你的建站时间或者网站上线时间</span></span></span><br><span class="line"><span class="vbscript">        <span class="built_in">now</span>.setTime(<span class="built_in">now</span>.getTime()+<span class="number">250</span>);</span></span><br><span class="line"><span class="javascript">        days = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>; dnum = <span class="built_in">Math</span>.floor(days);</span></span><br><span class="line"><span class="javascript">        hours = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum); hnum = <span class="built_in">Math</span>.floor(hours);</span></span><br><span class="line"><span class="vbscript">        <span class="keyword">if</span>(<span class="built_in">String</span>(hnum).length ==<span class="number">1</span> )&#123;hnum = <span class="string">"0"</span> + hnum;&#125; minutes = (<span class="built_in">now</span> - grt ) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum);</span></span><br><span class="line"><span class="javascript">        mnum = <span class="built_in">Math</span>.floor(minutes); <span class="keyword">if</span>(<span class="built_in">String</span>(mnum).length ==<span class="number">1</span> )&#123;mnum = <span class="string">"0"</span> + mnum;&#125;</span></span><br><span class="line"><span class="vbscript">        seconds = (<span class="built_in">now</span> - grt ) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum);</span></span><br><span class="line"><span class="javascript">        snum = <span class="built_in">Math</span>.round(seconds); <span class="keyword">if</span>(<span class="built_in">String</span>(snum).length ==<span class="number">1</span> )&#123;snum = <span class="string">"0"</span> + snum;&#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"Run for "</span>+dnum+<span class="string">" Days "</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" Hours "</span> + mnum + <span class="string">" m "</span> + snum + <span class="string">" s"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">setInterval(<span class="string">"createtime()"</span>,<span class="number">250</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(2) 运行效果：<br><img src="https://i.ibb.co/8b0S73M/grbkdj-14.png" alt="底部增加运行时间"></p><h4 id="当前所在菜单下划线显示"><a href="#当前所在菜单下划线显示" class="headerlink" title="当前所在菜单下划线显示"></a>当前所在菜单下划线显示</h4><p>(1) 打开<code>themes\next\layout\ _partials</code>目录下的<code>header.swig</code>文件<br>(2) 在底部添加以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> path = <span class="string">'https://malizhi.cn'</span>; <span class="comment">//这里要改成你博客的地址</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> localhostItem = <span class="built_in">String</span>(<span class="built_in">window</span>.location).split(path)[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> LiNode = <span class="built_in">document</span>.querySelectorAll(<span class="string">'#menu &gt; li &gt; a'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt; LiNode.length;i++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> item = <span class="built_in">String</span>(LiNode[i].href).split(path)[<span class="number">1</span>];</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(item == localhostItem &amp;&amp; item != <span class="literal">undefined</span>)&#123;</span></span><br><span class="line"><span class="actionscript">LiNode[i].setAttribute(<span class="string">'style'</span>,<span class="string">'border-bottom:1px solid black'</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(3) hexo clean &amp;&amp; hexo g &amp;&amp; hexo s后完成效果：<br><img src="https://i.ibb.co/YyxcV3c/grbkdj-15.png" alt="当前所在菜单下划线显示"></p><h4 id="底部跳动图标实现"><a href="#底部跳动图标实现" class="headerlink" title="底部跳动图标实现"></a>底部跳动图标实现</h4><p>(1) 在<code>next\layout_partials</code>下的<code>footer.swig</code>文件中，在你所需要调动的图标所对应的span中增加对应的ID<br>(2) 在主题的css文件<code>next\source\css\_variables\custom.styl</code> ，增加以下代码即可：</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//底部爱心小图标跳动</span></span><br><span class="line">keyframes heartAnimate &#123;</span><br><span class="line">    <span class="number">0</span>%,<span class="number">100</span>%&#123;transform:<span class="keyword">scale</span>(<span class="number">1</span>);&#125;</span><br><span class="line">    <span class="number">10</span>%,<span class="number">30</span>%&#123;transform:<span class="keyword">scale</span>(<span class="number">0.9</span>);&#125;</span><br><span class="line">    <span class="number">20</span>%,<span class="number">40</span>%,<span class="number">60</span>%,<span class="number">80</span>%&#123;transform:<span class="keyword">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">    <span class="number">50</span>%,<span class="number">70</span>%&#123;transform:<span class="keyword">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图标所对应的span中的ID</span></span><br><span class="line">#heart &#123;</span><br><span class="line">    animation: heartAnimate <span class="number">1.33</span>s ease-<span class="keyword">in</span>-out infinite;</span><br><span class="line">&#125;</span><br><span class="line">.with-love &#123;</span><br><span class="line">    <span class="keyword">color</span>: rgb(<span class="number">255</span>, <span class="number">113</span>, <span class="number">113</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(3) hexo clean &amp;&amp; hexo g &amp;&amp; hexo s后完成效果：<br><img src="https://i.ibb.co/YyxcV3c/grbkdj-15.png" alt="底部跳动图标实现"></p><hr><h3 id="第三方服务集成"><a href="#第三方服务集成" class="headerlink" title="第三方服务集成"></a>第三方服务集成</h3><h4 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h4><p>NexT 支持集成 <code>Swiftype</code>、 微搜索、<code>Local Search</code> 和 <code>Algolia</code>。在这里我使用的是<code>Local Search</code>，下面将介绍如何使用:<br>(1) 添加百度/谷歌/本地 自定义站点内容搜索，安装<code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-searchdb <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>(2) 编辑<code>站点配置文件_config.yml</code>，新增以下内容到任意位置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">search:</span></span><br><span class="line"><span class="symbol">  path:</span> search.xml</span><br><span class="line"><span class="symbol">  field:</span> post</span><br><span class="line"><span class="symbol">  format:</span> html</span><br><span class="line"><span class="symbol">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><p>(3) 编辑<code>主题配置文件_config.yml</code>，启用本地搜索功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>注：其他搜索方式请查看<a href="http://theme-next.iissnan.com/third-party-services.html#search-system" target="_blank" rel="noopener">站内搜索</a></p></blockquote><p>(4) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>，效果如下：<br><img src="https://i.ibb.co/k07jGDT/grbkdj-09.png" alt="站内搜索"></p><h4 id="数据统计分析"><a href="#数据统计分析" class="headerlink" title="数据统计分析"></a>数据统计分析</h4><p>NexT 支持集成 <code>不蒜子统计</code>、<code>百度统计</code>等多种数据统计方式。此处使用<code>不蒜子统计</code>，下面将介绍如何使用:</p><blockquote><p>此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</p></blockquote><p>(1) 全局配置：编辑<code>主题配置文件_config.yml</code>中的<code>busuanzi_count</code>的配置项。<br>当<code>enable: true</code>时，代表开启全局开关。<br>若 site_uv 、site_pv 、 page_pv 的值均为 false 时，不蒜子仅作记录而不会在页面上显示<br>(2) 站点UV配置：当<code>site_uv: true</code>时，代表在页面底部显示站点的UV值。<code>site_uv_header</code>和<code>site_uv_footer</code>为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的<code>font-awesome</code>。如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 效果：本站访客数12345人次</span></span><br><span class="line"><span class="symbol">site_uv:</span> true</span><br><span class="line"><span class="symbol">site_uv_header:</span> <span class="params">&lt;i class="fa fa-user"&gt;</span><span class="params">&lt;/i&gt;</span> 本站访客数</span><br><span class="line"><span class="symbol">site_uv_footer:</span> 人次</span><br></pre></td></tr></table></figure><p>(3) 站点PV配置：当<code>site_pv: true</code>时，代表在页面底部显示站点的PV值。<code>site_pv_header</code>和<code>site_pv_footer</code>为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的<code>font-awesome</code>。如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 效果：本站总访问量12345次</span></span><br><span class="line"><span class="symbol">site_pv:</span> true</span><br><span class="line"><span class="symbol">site_pv_header:</span> <span class="params">&lt;i class="fa fa-eye"&gt;</span><span class="params">&lt;/i&gt;</span> 本站总访问量</span><br><span class="line"><span class="symbol">site_pv_footer:</span> 次</span><br></pre></td></tr></table></figure><blockquote><p>注：其他统计方式请查看<a href="http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi" target="_blank" rel="noopener">数据统计分析</a></p></blockquote><p>(4) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>，效果如下：<br><img src="https://i.ibb.co/jR5q04v/grbkdj-11.png" alt="数据统计分析"></p><p>(5) 不蒜子统计不生效，浏览器控制台报错<br>原因：由于 busuanzi(不蒜子) 的域名更新，导致了使用 Hexo Next 主题时统计数据失效<br>解决方法：</p><ul><li>到 hexo 的 themes 文件夹下, 打开<code>\themes\next\layout_third-party\analytics\busuanzi-counter.swig</code>文件</li><li>将<code>src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</code>修改为<code>src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</code></li></ul><h4 id="内容分享服务"><a href="#内容分享服务" class="headerlink" title="内容分享服务"></a>内容分享服务</h4><p>NexT 支持集成 <code>jiathis</code>、<code>baidushare</code> 和 <code>AddThis</code>内容分享服务。在这里我使用的是<code>baidushare</code>，下面将介绍如何使用:<br>(1) 编辑<code>站点配置文件_config.yml</code>，新增以下内容到任意位置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidushare:</span> <span class="literal">true</span> <span class="comment">#百度分享功能</span></span><br></pre></td></tr></table></figure><p>(2) 编辑<code>主题配置文件_config.yml</code>，设置其展现方式：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">baidushare:</span> </span><br><span class="line"><span class="symbol">  type:</span> button <span class="meta">#百度分享展示的方式button|slide</span></span><br></pre></td></tr></table></figure><blockquote><p>注：其他内容分享方式请查看<a href="http://theme-next.iissnan.com/third-party-services.html#share-baidu" target="_blank" rel="noopener">内容分享服务</a></p></blockquote><p>(4) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，启动服务<code>hexo s</code>，效果如下：<br><img src="https://i.ibb.co/GCwytnS/grbkdj-10.png" alt="内容分享服务"></p><h4 id="文章阅读次数统计"><a href="#文章阅读次数统计" class="headerlink" title="文章阅读次数统计"></a>文章阅读次数统计</h4><p>(1) 在<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>进行对应的配置<br>详细配置参考文章：<a href="https://notes.doublemine.me/2015-10-21-为NexT主题添加文章阅读量统计功能.html#配置LeanCloud" target="_blank" rel="noopener">配置LeanCloud</a><br>(2) 注<code>Class</code>名称必须为<code>Counter</code></p><h4 id="Gitment评论"><a href="#Gitment评论" class="headerlink" title="Gitment评论"></a>Gitment评论</h4><p>(1) Gitment评论搭建参考：<a href="https://sjq597.github.io/2018/05/18/Hexo-使用Gitment评论功能/" target="_blank" rel="noopener">https://sjq597.github.io/2018/05/18/Hexo-使用Gitment评论功能/</a><br>(2) 踩过的坑：</p><ul><li><p>Error: Validation Failed<br>原因：issue的Label有长度限制,对于中文博客来说,中文标题很容易就超过长度限制<br>方案：修改<code>themes/next/layout/_third-party/comments/gitment.swig</code>中的id部分如下:</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var gitment = new &#123;&#123;<span class="attribute">CommentsClass&#125;&#125;(&#123;</span></span><br><span class="line"><span class="attribute">     id</span>: '&#123;&#123; page<span class="variable">.date</span> &#125;&#125;',</span><br><span class="line">     owner: '&#123;&#123; theme<span class="variable">.gitment</span><span class="variable">.github_user</span> &#125;&#125;',</span><br><span class="line">     repo: '&#123;&#123; theme<span class="variable">.gitment</span><span class="variable">.github_repo</span> &#125;&#125;',</span><br></pre></td></tr></table></figure></li><li><p>object ProgressEvent<br>原因：作者的<code>default.css</code>和<code>gitment.browser.js</code>域名用的别人的，现在过期了<br>方案：修改<code>themes/next/layout/_third-party/comments/gitment.swig</code>中对应部分如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;script src="https://imsun.github.io/gitment/dist/gitment.browser.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/gh/theme-next/theme-next-gitment@1/default.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/gh/theme-next/theme-next-gitment@1/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注释部分是原来的地址，过期了的，下面的是引用的其他有效地址<br>(3) 汉化：<br>修改<code>themes/next/layout/_third-party/comments/gitment.swig</code>中对应部分如下:</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">"stylesheet"</span> <span class="attribute">href</span>=<span class="string">"https://billts.site/extra_css/gitment.css"</span>&gt;</span><br><span class="line">&lt;script <span class="attribute">src</span>=<span class="string">"https://billts.site/js/gitment.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>(4) 清缓存<code>hexo clean</code>，重新生成<code>hexo g</code>，部署<code>hexo d</code>，然后访问<a href="https://luxiong-github.github.io">username.github.io</a>查看效果<br>(5) 每篇文章都需要登录GitHub账号然后点击初始化</p><h4 id="来必力评论"><a href="#来必力评论" class="headerlink" title="来必力评论"></a>来必力评论</h4><p>(1) 登陆<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a>获取你的<code>livere_uid</code></p><blockquote><p>没有账号需要注册一个<br>注册完点击<code>安装</code>，然后填上博客的相应信息，如图<code>data-uid</code>就是所需要的<code>livere_uid</code><br><img src="https://i.ibb.co/n60XzW7/grbkdj-12.png" alt="来必力配置"><br>(2) 编辑<code>主题配置文件</code>， 编辑<code>livere_uid</code>字段，设置如下:</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livere_uid:</span> <span class="comment">#your livere_uid</span></span><br></pre></td></tr></table></figure><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>(1) <a href="https://cloud.tencent.com/developer/article/1482021" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1482021</a><br>(2) <a href="https://tianbozhang.coding.me/personal-blog-custom.html" target="_blank" rel="noopener">https://tianbozhang.coding.me/personal-blog-custom.html</a><br>(3) <a href="https://ehlxr.me/categories/Hexo/" target="_blank" rel="noopener">https://ehlxr.me/categories/Hexo/</a><br>(4) <a href="https://malizhi.cn/nextTutorial/#more" target="_blank" rel="noopener">https://malizhi.cn/nextTutorial/#more</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;给博客增加一些更高级的功能，例如分页、站内搜索、评论…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo个人博客搭建" scheme="https://luxiong-github.github.io/categories/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Blog" scheme="https://luxiong-github.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://luxiong-github.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://luxiong-github.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://luxiong-github.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建-入坑</title>
    <link href="https://luxiong-github.github.io/2018/08/30/hexo/hexo_blog01/"/>
    <id>https://luxiong-github.github.io/2018/08/30/hexo/hexo_blog01/</id>
    <published>2018-08-30T02:35:46.000Z</published>
    <updated>2019-09-01T14:56:31.562Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言:<br>使用Node.js+Hexo+Next+Git+GitHub，让你几分钟就能创建一个博客</p></blockquote><a id="more"></a><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><p>(1) <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js</a><br>(2) <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a><br>(3) <a href="https://github.com/luxiong-github" target="_blank" rel="noopener">GitHub账号及仓库</a>  </p><blockquote><p>注：上述条件安装完成后执行后续操作</p></blockquote><hr><h3 id="配置GitHub仓库"><a href="#配置GitHub仓库" class="headerlink" title="配置GitHub仓库"></a>配置GitHub仓库</h3><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>(1) 新建一个名为<code>username.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库<br>(2) 每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库<br><img src="https://i.ibb.co/cg79bVk/grbkdj-04.png" alt="创建仓库"></p><blockquote><p>1.注册的邮箱一定要验证，否则不会成功<br>2.仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名</p></blockquote><h4 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h4><p>(1) 提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题<br>(2) 检查本机已存在的ssh密钥：<code>cd ~/. ssh</code>，如果提示<code>No such file or directory</code>说明你是第一次使用Git<br>(3) 生成密钥：<code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code>，然后三次回车<br>(4) 打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容<br>(5) 打开你的github主页，进入<code>个人设置 -&gt; SSH and GPG keys -&gt; New SSH key</code>，将刚复制的内容粘贴到key那里，title随便填，保存:<br><img src="https://i.ibb.co/94vTpZG/grbkdj-05.png" alt="配置SSH"></p><h4 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h4><p>(1) 输入命令：<code>ssh -T git@github.com</code><br>(2) 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes<br>(3) 看到以下信息说明SSH已配置成功：</p><blockquote><p>Hi luxiong-github! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><h4 id="配置Git用户名邮箱-非必须"><a href="#配置Git用户名邮箱-非必须" class="headerlink" title="配置Git用户名邮箱(非必须)"></a>配置Git用户名邮箱(非必须)</h4><p>(1) 执行以下命令：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"luxiong-github"</span><span class="comment">// 你的github用户名，非昵称</span></span><br><span class="line">git config --global user<span class="selector-class">.email</span>  <span class="string">"xxx@qq.com"</span><span class="comment">// 填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure><p>(2) 配置详情参考：<a href="https://blog.csdn.net/sjt19910311/article/details/83685616" target="_blank" rel="noopener">https://blog.csdn.net/sjt19910311/article/details/83685616</a></p><hr><h3 id="创建hexo项目"><a href="#创建hexo项目" class="headerlink" title="创建hexo项目"></a>创建hexo项目</h3><p>建议使用文本编辑工具管理项目，推荐使用：VSCode、sublime等，我使用的是VSCode</p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>(1) 打开Git Bash，是一个命令输入终端，后序所有命令操作都在此进行<br>(2) 输入命令：<code>npm install -g hexo-cli</code><br>(3) 如下图:<br><img src="https://i.ibb.co/C6JvQy0/grbkdj-01.png" alt="安装Hexo"></p><h4 id="创建项目文件夹"><a href="#创建项目文件夹" class="headerlink" title="创建项目文件夹"></a>创建项目文件夹</h4><p>(1) 在Git Bash中切换到博客目录：<code>cd E:React/my-blog/</code><br>(2) 新建项目目录：<code>hexo init</code><br>(3) 如下图是在<code>E:\React\my-blog\</code>目录下新建了一个<code>hexo</code>目录<br><img src="https://i.ibb.co/56j995m/grbkdj-02.png" alt="创建项目文件夹"></p><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><p>(1) 切换到hexo目录：<code>cd hexo/</code><br>(2) 安装依赖包：<code>npm install</code><br>(3) 安装完成后目录结构如下图：<br><img src="https://i.ibb.co/WysL2d6/grbkdj-03.png" alt="安装依赖包"></p><blockquote><p>目录结构介绍请看官方API：<a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/setup</a></p></blockquote><hr><h3 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h3><h4 id="网站配置"><a href="#网站配置" class="headerlink" title="网站配置"></a>网站配置</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> 卢雄的博客 <span class="meta">#网站标题</span></span><br><span class="line"><span class="symbol">subtitle:</span> Live <span class="keyword">and</span> learn.  <span class="meta">#网站副标题</span></span><br><span class="line"><span class="symbol">description:</span> 要做的事情总找得出时间和机会；不愿意做的事情也总能找得出借口... <span class="meta">#网站描述</span></span><br><span class="line"><span class="symbol">keywords:</span> Blog,Hexo,Github  <span class="meta">#网站的关键词。使用半角逗号 , 分隔多个关键词</span></span><br><span class="line"><span class="symbol">author:</span> luxiong <span class="meta">#作者</span></span><br><span class="line"><span class="symbol">language:</span> <span class="built_in">zh</span>-Hans  <span class="meta">#语言 en:英文  zh-Hans:简体中文</span></span><br><span class="line"><span class="symbol">timezone:</span> <span class="meta">#网站时区,默认使用电脑的时区</span></span><br></pre></td></tr></table></figure><h4 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置"></a>部署配置</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>: #部署相关的配置</span><br><span class="line">  <span class="attribute">type</span>: git #使用Git提交</span><br><span class="line">  <span class="attribute">repo</span>:  git<span class="variable">@github</span>.<span class="attribute">com</span>:username/username.github.io.git #仓库地址，username替换为Github的username</span><br><span class="line">  <span class="attribute">branch</span>: master #分支名称。如果不指定，则默认值为 master</span><br></pre></td></tr></table></figure><blockquote><p>其他详细配置参考文档：<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration</a></p></blockquote><hr><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p>(1) 生成文件<br>在终端输入命令：<code>hexo g</code>或者<code>hexo generate</code>，作用是将source下面的资源文件在public下生成对应的HTML文件，这些文件将来都是要提交到github去的<br>(2) 启动服务<br>在终端输入命令：<code>hexo s</code>或者<code>hexo server</code>，作用是开启本地预览服务，打开浏览器访问 localhost:4000 即可看到内容，默认的已经写好了一篇名为Hello World的文章<br><img src="https://i.ibb.co/S3q6r8M/grbkdj-06.png" alt="预览效果"><br>(3) 如果浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考：<a href="http://blog.liuxianan.com/windows-port-bind.html" target="_blank" rel="noopener">http://blog.liuxianan.com/windows-port-bind.html</a></p><hr><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><p>上述只是完成了最基本的博客搭建，还有许多配置仍需完善…</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>(1) 输入命令：<code>hexo new page &quot;categories&quot;</code><br>(2) 此命令会在source目录下面创建一个categories目录，内含一个<code>index.md</code>文档，打开进行编辑<br>(3) 增加页面类型，结果如下：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> categories</span><br><span class="line"><span class="symbol">date:</span> <span class="number">2019</span><span class="number">-08</span><span class="number">-31</span> <span class="number">13</span>:<span class="number">47</span>:<span class="number">02</span></span><br><span class="line"><span class="symbol">type:</span> <span class="string">"categories"</span>  <span class="meta">#将页面的类型设置为categories</span></span><br></pre></td></tr></table></figure><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>(1) 输入命令：<code>hexo new page &quot;tags&quot;</code><br>(2) 此命令会在source目录下面创建一个tags目录，内含一个<code>index.md</code>文档，打开进行编辑<br>(3) 设置页面类型，结果如下：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> tags</span><br><span class="line"><span class="symbol">date:</span> <span class="number">2019</span><span class="number">-08</span><span class="number">-31</span> <span class="number">13</span>:<span class="number">47</span>:<span class="number">02</span></span><br><span class="line"><span class="symbol">type:</span> <span class="string">"tags"</span>  <span class="meta">#将页面的类型设置为tags</span></span><br></pre></td></tr></table></figure><h4 id="about自我介绍页面"><a href="#about自我介绍页面" class="headerlink" title="about自我介绍页面"></a>about自我介绍页面</h4><p>(1) 输入命令：<code>hexo new page &quot;about&quot;</code><br>(2) 此命令会在source目录下面创建一个about目录，内含一个<code>index.md</code>文档，打开进行编辑<br>(3) 设置页面类型，结果如下：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> about</span><br><span class="line"><span class="symbol">date:</span> <span class="number">2018</span><span class="number">-08</span><span class="number">-31</span> <span class="number">16</span>:<span class="number">47</span>:<span class="number">02</span></span><br><span class="line"><span class="symbol">type:</span> <span class="string">"about"</span> <span class="meta"># 将页面的类型设置为about</span></span><br></pre></td></tr></table></figure><h4 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h4><p>(1) 在source目录下创建一个<code>404.html</code>文件<br>(2) 打开文件，将内容修改为以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://qzone.qq.com/gy/404/style/404style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/plain"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">homePageName</span>=<span class="string">"回到我的主页"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/data.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/page.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(3) 此404页面为腾讯公益404页面，也可自定义404页面内容</p><h4 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h4><p>(1) 在themes目录下存放的是博客的主题，默认的主题是landscape，可以修改其他主题，推荐使用<code>next</code>主题<br>(2) 将终端切换到hexo目录，执行以下命令：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>(3) 修改_config.yml中的theme: landscape改为theme: next，然后重新执行hexo g来重新生成</p><h4 id="启用配置"><a href="#启用配置" class="headerlink" title="启用配置"></a>启用配置</h4><p>(1) 分类、标签、404页面等配置是跟随主题来配置的，所以每次更换主题后都需要启用对应配置才能生效<br>(2) 打开<code>themes -&gt; next</code>目录下的主题配置文件_config.yml，开启以下配置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> / || home</span><br><span class="line"><span class="symbol">  about:</span> <span class="meta-keyword">/about/</span> || user</span><br><span class="line"><span class="symbol">  tags:</span> <span class="meta-keyword">/tags/</span> || tags</span><br><span class="line"><span class="symbol">  categories:</span> <span class="meta-keyword">/categories/</span> || th</span><br><span class="line">  <span class="meta">#archives: /archives/ || archive</span></span><br><span class="line">  <span class="meta">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="meta">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line"><span class="symbol">  commonweal:</span> /<span class="number">404</span>/ || heartbeat</span><br></pre></td></tr></table></figure><p>(3) 分别执行以下命令，浏览器访问4000端口进行验证：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span> clean  <span class="comment"># 清除原先生成的public下的文件</span></span><br><span class="line">hexo g      <span class="comment"># 生成public下的文件</span></span><br><span class="line">hexo s      <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><blockquote><p>next主题详细配置参考：<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/theme-settings.html</a></p></blockquote><h4 id="发布文章测试"><a href="#发布文章测试" class="headerlink" title="发布文章测试"></a>发布文章测试</h4><p>(1) 新建一篇文章：<code>hexo new &quot;测试文章&quot;</code>或者直接在source_posts\目录下面新建<code>测试文章.md</code>文件<br>(2) 打开md文件，按格式书写文章内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">测试标题</span> <span class="comment"># 这是标题</span></span><br><span class="line"><span class="attr">tags:</span>   <span class="comment"># 这里写的标签会自动汇集到 tags 页面上</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">测试标签1</span> <span class="comment"># 可配置多个标签，注意格式</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">测试标签2</span></span><br><span class="line"><span class="attr">category:</span>  <span class="comment"># 这里写的分类会自动汇集到 categories 页面上，分类可以多级</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">测试一级分类</span> <span class="comment"># 一级分类</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">测试二级分类</span> <span class="comment"># 二级分类</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">测试文章内容</span></span><br></pre></td></tr></table></figure><p>(3) 预览：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span> clean  <span class="comment"># 清除原先生成的public下的文件</span></span><br><span class="line">hexo g      <span class="comment"># 生成public下的文件</span></span><br><span class="line">hexo s      <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><blockquote><p>1.修改内容一旦预览与修改不一致，则需要clean<br>2.已发布的文章发生修改， 可直接预览，即 不执行上述3个命令,刷新浏览器即可<br>3.若对md文档语法不熟悉，可参考<a href="http://note.youdao.com/noteshare?id=27b9fd2aab2b8316784e575d314e09d6" target="_blank" rel="noopener">此文章</a></p></blockquote><hr><h3 id="上传到GitHub"><a href="#上传到GitHub" class="headerlink" title="上传到GitHub"></a>上传到GitHub</h3><p>(1) 在之前已经将<code>ssh key</code>和<code>_config.yml</code>关于deploy部分的配置已经完善,不再叙述<br>(2) 直接执行<code>hexo d</code>一般会报如下错误：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deployer <span class="keyword">not</span> found: github 或者 Deployer <span class="keyword">not</span> found: git</span><br></pre></td></tr></table></figure><p>解决方案是安装自动部署发布工具：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>(3) 输入命令<code>hexo d</code>将代码上传到GitHub，完成查看GitHub如下：<br><img src="https://i.ibb.co/x3qT618/grbkdj-07.png" alt="代码上传"><br>(4) 浏览器访问：<a href="https://luxiong-github.github.io/">yourname.github.io</a>，如果出现博客的内容，说明代码上传成功</p><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="Hexo相关命令总结"><a href="#Hexo相关命令总结" class="headerlink" title="Hexo相关命令总结"></a>Hexo相关命令总结</h4><p>(1) 常用命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo clean          #清除缓存</span><br><span class="line">hexo g              #生成静态页面至public目录，完整写法为：hexo generate</span><br><span class="line">hexo s              #启动本地服务，完整写法为：hexo server</span><br><span class="line">hexo d              #发布到远程(GitHub)，完整写法为：hexo deploy</span><br><span class="line">hexo new<span class="built_in"> page </span><span class="string">"xxx"</span> #新建xxx页面</span><br><span class="line">hexo new <span class="string">"xxx"</span>      #新建xxx文章</span><br><span class="line">hexo help           #查看帮助</span><br><span class="line">hexo version        #查看Hexo的版本</span><br><span class="line">hexo init           #生成站点</span><br><span class="line">npm install --save xxx  #安装插件</span><br><span class="line">npm unstall xxx     #卸载插件</span><br></pre></td></tr></table></figure><p>(2) 组合命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span> s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><blockquote><p>命令尽量手写少复制粘贴，便于熟悉和理解</p></blockquote><h4 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h4><p>(1) 发布的文章都是md文档，可以先了解一下<a href="http://note.youdao.com/noteshare?id=27b9fd2aab2b8316784e575d314e09d6" target="_blank" rel="noopener">Markdown语法</a><br>(2) <code>FATAL Cannot read property ‘replace’ of null</code><br>问题原因：url不能为空<br>解决：修改站点配置文件<code>_config.yml</code></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">url:</span> <span class="string">http:</span><span class="comment">//luxiong-blog.com</span></span><br></pre></td></tr></table></figure><p>(3) 静态资源图片设置：<code>\themes\next\source\images\</code>用来存放图片<br>遇到某些地方需要用到图片时(主题配置文件中的avatar、wechatpay、alipay等)，直接使用相对路径引用：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">avatar:</span> <span class="meta-keyword">/images/</span>avatar.jpg          <span class="meta">#头像</span></span><br><span class="line"><span class="symbol">wechatpay:</span> <span class="meta-keyword">/images/</span>wechatpay.jpg    <span class="meta">#微信打赏码</span></span><br><span class="line"><span class="symbol">alipay:</span> <span class="meta-keyword">/images/</span>alipay.jpg          <span class="meta">#支付宝打赏码</span></span><br></pre></td></tr></table></figure><p>(4) 阅读全文：生成的博文目录会显示全部的文章内容，在合适的位置加上<code>&lt;!--more--&gt;</code>即可隐藏内容，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 前言</span><br><span class="line"></span><br><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line">1. 全是静态文件，访问速度快；</span><br><span class="line">2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br><span class="line"></span><br><span class="line">4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">5. 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">6. 等等；</span><br></pre></td></tr></table></figure><p>完成效果：<br><img src="https://i.ibb.co/6XbyR4H/grbkdj-08.png" alt="隐藏内容"><br>(5) 建站问题及错误，遇到问题不要慌，大胆猜测小心验证，百度搜索问题关键字基本都有解决方案</p><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>(1) <a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a><br>(2) <a href="https://tianbozhang.coding.me/personal-blog-start.html" target="_blank" rel="noopener">https://tianbozhang.coding.me/personal-blog-start.html</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言:&lt;br&gt;使用Node.js+Hexo+Next+Git+GitHub，让你几分钟就能创建一个博客&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo个人博客搭建" scheme="https://luxiong-github.github.io/categories/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Blog" scheme="https://luxiong-github.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://luxiong-github.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://luxiong-github.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://luxiong-github.github.io/tags/Git/"/>
    
  </entry>
  
</feed>
