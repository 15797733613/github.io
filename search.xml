<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[QC问题流程梳理]]></title>
    <url>%2F2019%2F09%2F04%2Fweaver%2Fquestion-tidy%2F</url>
    <content type="text"><![CDATA[这篇文章是私人的哦，输下密码吧(*๓´╰╯`๓) Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>weaver</category>
      </categories>
      <tags>
        <tag>weaver</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[批量修改文件名称与格式]]></title>
    <url>%2F2018%2F12%2F06%2Frename-file%2F</url>
    <content type="text"><![CDATA[前言:主要介绍一下如何利用Python脚本实现给指定的文件数据集按照一定的格式批量重命名，文件不单指图片，其他格式的也可以，此处以图片转换为例，希望能够帮到您(^_−)☆ Python脚本(1) 写的是python脚本，需要安装python环境，安装教程可自行百度(2) 桌面新建test1.txt文档后将其改为test1.py,打开文档，将以下内容粘贴进去 12345678910111213141516171819202122232425262728293031# -*- coding:utf8 -*- import osclass BatchRename(): ''' 批量重命名文件夹中的图片文件 ''' def __init__(self): self.path = 'E:\Pictures\' #存放图片的文件夹路径 def rename(self): filelist = os.listdir(self.path) total_num = len(filelist) i = 1 for item in filelist: if item.endswith('.jpg'): #指定选取的图片格式为jpg src = os.path.join(os.path.abspath(self.path), item) # 2018-11-20_bqb00 2018-11-20_hzw00 dst = os.path.join(os.path.abspath(self.path), '2018-11-20_00' + str(i) + '.png') #设置新的图片名称 try: os.rename(src, dst) print ("转换图片 %s 成为 %s ..." % (src, dst)) i = i + 1 except: continue print ("共 %d 张图片重命名和转换成 %d jpgs" % (total_num, i-1))if __name__ == '__main__': demo = BatchRename() demo.rename() (3) 只要按自己的需求修改脚本中的中文注释部分即可，上述脚本的功能是：将E:\Pictures\目录下的jpg格式的图片批量重命名为2018-11-20_00形式的png图片(4) 在桌面按住shift+鼠标右键，打开打开PowerShell窗口，执行python test1.py命令,出现如下结果： 懒人专用 上面的脚本还有手动输入命令执行，我不想输命令怎么办呢？(1) 在test1.py同级目录(此处为桌面)新建一个test2.txt文档，打开文档，将以下内容粘贴进去： 12# 执行批量修改图片脚本python test1.py (2) 保存之后将test2.txt改为test2.bat，然后双击就能自动执行上述python脚本文件 注：test2.bat一定要和test2.py在同一目录 参考链接：https://blog.csdn.net/u014797226/article/details/80028459]]></content>
      <categories>
        <category>Python</category>
        <category>tools</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>script</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown基本语法]]></title>
    <url>%2F2018%2F09%2F23%2Fmarkdown%2Fmarkdown01%2F</url>
    <content type="text"><![CDATA[简单介绍一下Markdown的基本语法(未完善，待补充…) 标题在想要设置为标题的文字前面加#来表示注：标准语法一般在#后跟个空格再写文字（1）示例： 123456# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 （2）效果：由于标题演示效果会影响目录结构，故不展示效果 字体（1）简介 加粗要加粗的文字左右分别用两个*号包起来 斜体要加粗的文字左右分别用一个*号包起来 斜体加粗要倾斜和加粗的文字左右分别用三个*号包起来 删除线要加删除线的文字左右分别用两个~~号包起来 （2）示例： 1234**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~ （3）效果：这是加粗的文字这是倾斜的文字这是斜体加粗的文字这是加删除线的文字 引用在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;等等 （1）示例： 123&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 （2）效果： 这是引用的内容 这是引用的内容 这是引用的内容 分割线三个或者三个以上的 - 或者 * 都可以 （1）示例： 1234-------******** （2）效果： 图片（1）简介基本语法：![图片alt](图片URL&quot;图片title&quot;&quot;)图片alt:显示在图片下面的文字，相当于对图片内容的解释;图片URL:图片的链接URL图片title:当鼠标移到图片上时显示的内,title可加可不加(==URL和title之间有个空格==) （2）示例： 1![这是一张示例图片](https://ibb.co/album/kshZBF ''海贼王'') （3）效果： 图片必须配合链接使用，所以必须有一个好的图床工具： 七牛云：https://www.qiniu.com/ ImgBB：https://imgbb.com/ 聚合图床：https://www.superbed.cn/百度直接搜索关键字“免费图床”，可以搜到一堆 超链接初级链接（1）基本语法：[超链接名](超链接URL &quot;超链接title&quot;)title可加可不加,语法参照图片 （2）示例： 12[简书](http://jianshu.com)[百度](http://baidu.com) （3）效果：简书百度 高级链接（1）示例 1234567链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]这个链接用 runoob 作为网址变量 [Runoob][runoob]然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [runoob]: http://www.runoob.com/ （2）效果百度简书 注：Markdown本身语法不支持链接在新页面中打开，如果想要在新页面中打开的话可以用html语言的a标签代替。例如： 12示例&lt;a href="https://www.jianshu.com/u/1f5ac0cf6a8b" target="_blank"&gt;简书&lt;/a&gt; 列表列表分为无序列表和有序列表 无序列表无序列表用 - + * 任何一种都可以 （1）示例： 12345- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格 （2）效果： 列表内容 列表内容 列表内容 有序列表数字加点 （1）示例： 123451. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格 （2）效果： 列表内容 列表内容 列表内容 注意：序号跟内容之间要有空格 列表嵌套 一级无序列表 二级无序列表 二级无序列表 一级无序列表 二级有序列表 二级有序列表 表格（1）语法： 1234567891011表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 （2）示例： 12345姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟 （3）效果：姓名|技能|排行–|:–:|–:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟 代码单行代码代码之间分别用一个反引号包起来（1）示例： 1`create database hero;` （2）效果：create database hero; 多行代码代码之间分别用三个反引号包起来，且两边的反引号单独占一行示例及效果： 1234function fun()&#123; echo "这是一句非常牛逼的代码";&#125;fun(); 流程图公式流程图时序图甘特图 待办事项- [x]：表示已完成- [ ]：表示未完成（1）示例： 123456- [x] 已完成项目1 - [x] 已完成事项1 - [x] 已完成事项2- [ ] 待完成项目1 - [ ] 待完成事项1 - [ ] 待完成事项2 （2）效果： 已完成项目1 已完成事项1 已完成事项2 待完成项目1 待完成事项1 待完成事项2 高级技巧支持的 HTML 元素（1）简介目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等（2）示例 123456&lt;b&gt;test&lt;/b&gt; &lt;i&gt;test&lt;/i&gt; &lt;em&gt;test&lt;/em&gt; &lt;sup&gt;test&lt;/sup&gt; &lt;sub&gt;test&lt;/sub&gt; &lt;br&gt;test&lt;/br&gt; （3）效果testtesttesttesttesttest 转义（1）简介Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符（2）示例 12**文本加粗** \*\* 正常显示星号 \*\* （3）效果文本加粗** 正常显示星号 ** 参考文档：1.有道云笔记Markdown指南2.菜鸟教程]]></content>
      <categories>
        <category>实用技术</category>
        <category>Markdown教程</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Note</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建-加强]]></title>
    <url>%2F2018%2F09%2F02%2Fhexo%2Fhexo-blog03%2F</url>
    <content type="text"><![CDATA[前言:给博客增加一些更高级的功能，例如分页、站内搜索、评论… Hexo文章加密简介(1) 尝试着想一下，你写了一篇博客，但是，出于某种原因，不太希望每一个人都可以看到他。所以你常常会为这种文章设置一个密码，其他人需要输入密码才可以访问这篇博客。所以Hexo-Blog-Encrypt 因为这个需求而诞生了(2) 一旦你输入了正确的密码，你可以在接下来的 30 分钟内，无需密码访问该网页 安装(1) 命令： 123npm install --save hexo-blog-encrypt # npm安装yarn add hexo-blog-encrypt # yarn安装 (2) 在站点配置文件_config.yml中添加插件配置： 123456# Securityencrypt: # hexo-blog-encrypt enable: true tags: # 配置标签加密 - &#123;name: test, password: test&#125; - &#123;name: diary, password: diary&#125; (3) 文章头部添加对应字段，如password, abstract, message： 1234567---title: Hello Worlddate: 2016-03-30 21:18:02password: mikemessi # 该博客加密使用的密码abstract: Something was encrypted, please enter password to read. #该博客的摘要，会显示在博客的列表页message: Welcome to my blog, please enter password to read. #博客查看时，密码输入框上面的描述性文字--- (4) hexo clean &amp;&amp; hexo g &amp;&amp; hexo s，来查看效果 注意事项(1) 文章设置的password优先级最高，其次是设置标签加密，文章多标签加密密码优先级跟文章标签先后顺序有关(2) 密码的有效时间是30分钟(3) 插件还可以对TOC进行加密以及修改加密模板，详情见参考链接(4) 加密后的文章可能会有不显示文章目录的bug，解决方案：将next/layout/_macro/sidebar.swig替换为这个博客中的文件 参考链接：https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md Valine评论安装使用Next主题，本身就已经集成了valine，因此正常情况下只需要配置一下就行了，不用安装，需要安装的可以使用以下命令： 1234# Install leancloud's js-sdknpm install leancloud-storage --save# Install valinenpm install valine --save Leancloud配置(1) 之前的文章次数统计已经配置过了，这里只需要进入Leancloud获取对应的APP ID和APP KEY就行了(2) 修改主题配置文件hexo\themes\next\_config.yml，修改以下参数： 12345678910valine: enable: true //打开valine评论功能 appid: 你的leancloud appid appkey: 你的leancloud appkey notify: false //邮件提醒 verify: true //评论时是否有验证码，需要在Leancloud 设置-&gt;安全中心 中打开 placeholder: 说点什么吧！ //评论框默认显示 avatar: monsterid //评论者的头像 guest_info: nick # custom comment header pageSize: 10 # pagination size (3) 评论者头像avatar取值与显示效果如下： 相册 注：Next主题默认是不含有相册页面的,如果想添加此页面需自行编写 相册和视频导航栏LTAIC4oDgY9ZCa0n0nEgVvA7KLV7QUfV1vMgjF4U4JvxM2 其他配置博客相册页面图片的处理 小功能集合文章链接唯一化hexo默认提供的文章链接方案是使用年/月/日/标题，也许你会数次更改文章题目或者变更文章发布时间，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择(1) 安装插件 1npm install hexo-abbrlink --save (2) 在站点配置文件中查找代码permalink，将其更改为: 1permalink: posts/:abbrlink/ # “posts/” 可自行更换 参考(1) https://malizhi.cn/HexoAlbum/(2) https://www.jianshu.com/p/7f6425b3ffb2]]></content>
      <categories>
        <category>Hexo个人博客搭建</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建-完善]]></title>
    <url>%2F2018%2F08%2F31%2Fhexo%2Fhexo_blog02%2F</url>
    <content type="text"><![CDATA[前言:给博客增加一些更高级的功能，例如分页、站内搜索、评论… 细节完善分页(1) 插件安装(按需安装) 123npm install --save hexo-generator-index # 首页分页配置# npm install --save hexo-generator-archive # 归档分页配置# npm install --save hexo-generator-tag # 标签分页配置 (2) 站点配置文件： 1234567891011index_generator: path: '' per_page: 5 order_by: -date#archive_generator:# per_page: 20# yearly: true# monthly: true#tag_generator:# per_page: 10 (3) 清缓存hexo clean，重新生成hexo g，启动服务hexo s，查看效果 文章相关 详情请参考：https://tianbozhang.coding.me/personal-blog-custom.html 分页(1) 插件安装(按需安装) 123npm install --save hexo-generator-index # 首页分页配置# npm install --save hexo-generator-archive # 归档分页配置# npm install --save hexo-generator-tag # 标签分页配置 (2) 站点配置文件： 1234567891011index_generator: path: '' per_page: 5 order_by: -date#archive_generator:# per_page: 20# yearly: true# monthly: true#tag_generator:# per_page: 10 (3) 清缓存hexo clean，重新生成hexo g，启动服务hexo s，查看效果 博文置顶(1) 修改hexo-generator-index插件将node_modules/hexo-generator-index/lib/generator.js文件替换为：generator.js(2)在文章Front-matter中添加top值，数值越大文章越靠前，如： 12345678---title: Naruto 图集categories: [图片]tags: [picture,naruto]date: 2016-09-02 14:36:04keywords: picture,narutotop: 10--- 头像圆形旋转介绍一下实现头像圆形，鼠标经过旋转或者一直让旋转效果，主要是修改hexo目录下\themes\next\source\css\_common\components\sidebar\sidebar-author.styl文件(1) 头像圆形修改修改sidebar-author.styl文件中.site-author-imageCSS 样式如下： 12345678910111213.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /*头像圆形*/ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px;&#125; (2) 鼠标经过旋转修改修改sidebar-author.styl文件，添加 CSS 样式img:hover如下代码： 123456img:hover &#123; /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125; 修改sidebar-author.styl文件中.site-author-imageCSS 样式如下： 12345678910111213141516171819.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.5s ease-out; -moz-transition: -moz-transform 1.5s ease-out; transition: transform 1.5s ease-out;&#125; (3) 鼠标经过旋转修改修改sidebar-author.styl文件，添加如下代码： 12345678910111213141516171819202122232425/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(360deg); &#125;&#125; 修改sidebar-author.styl文件中.site-author-imageCSS 样式如下： 12345678910111213141516171819202122232425.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画：animation:动画名称 动画播放时长单位秒或微秒 动画播放的速度曲线linear为匀速 动画播放次数infinite为循环播放; */ -webkit-animation: play 3s linear infinite; -moz-animation: play 3s linear infinite; animation: play 3s linear infinite; /* 鼠标经过头像旋转360度 -webkit-transition: -webkit-transform 1.5s ease-out; -moz-transition: -moz-transform 1.5s ease-out; transition: transform 1.5s ease-out;*/&#125; 鼠标经过停止头像旋转：修改sidebar-author.styl文件，添加 CSS 样式img:hover如下代码： 12345678910img:hover &#123; /* 鼠标经过停止头像旋转 */ -webkit-animation-play-state:paused; animation-play-state:paused; /* 鼠标经过头像旋转360度 -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);*/&#125; 页面点击小红心(1) 在/themes/next/source/js/src下新建文件clicklove.js，接着把该链接下的代码拷贝粘贴到clicklove.js文件中。代码如下： 12// 页面点击爱心效果!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); (2) 在\themes\next\layout\_layout.swig文件末尾添加： 12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/clicklove.js"&gt;&lt;/script&gt; (3) 清缓存hexo clean，重新生成hexo g，启动服务hexo s检验效果 动态title崩溃欺骗(1) \themes\next\source\js\src，新建custom-title.js 12345678910111213141516&lt;!--崩溃欺骗--&gt;var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "/img/TEP.ico"); document.title = ' 页面崩溃啦 ~ ！'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "/favicon.ico"); document.title = ' 噫又好了~ ' + OriginTitile; titleTime = setTimeout(function () &#123; document.title = OriginTitile;&#125;, 2000); &#125;&#125;); (2) 更改\themes\next\layout_layout.swig,在文件末尾添加： 12&lt;!--动态title崩溃欺骗,卖萌专用--&gt;&lt;script type="text/javascript" src="/js/src/custom-title.js"&gt;&lt;/script&gt; (3) 清缓存hexo clean，重新生成hexo g，启动服务hexo s检验效果 High一下(1) header位置更改themes\next\layout_custom\header.swig,在文件末尾添加：sidebar位置更改themes\next\layout_custom\sidebar.swig(2) 添加以下内容： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150&lt;li&gt; &lt;a title="把这个链接拖到你的Chrome收藏夹工具栏中" href='javascript:(function() &#123; function c() &#123; var e = document.createElement("link"); e.setAttribute("type", "text/css"); e.setAttribute("rel", "stylesheet"); e.setAttribute("href", f); e.setAttribute("class", l); document.body.appendChild(e) &#125; function h() &#123; var e = document.getElementsByClassName(l); for (var t = 0; t &lt; e.length; t++) &#123; document.body.removeChild(e[t]) &#125; &#125; function p() &#123; var e = document.createElement("div"); e.setAttribute("class", a); document.body.appendChild(e); setTimeout(function() &#123; document.body.removeChild(e) &#125;, 100) &#125; function d(e) &#123; return &#123; height : e.offsetHeight, width : e.offsetWidth &#125; &#125; function v(i) &#123; var s = d(i); return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r &#125; function m(e) &#123; var t = e; var n = 0; while (!!t) &#123; n += t.offsetTop; t = t.offsetParent &#125; return n &#125; function g() &#123; var e = document.documentElement; if (!!window.innerWidth) &#123; return window.innerHeight &#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123; return e.clientHeight &#125; return 0 &#125; function y() &#123; if (window.pageYOffset) &#123; return window.pageYOffset &#125; return Math.max(document.documentElement.scrollTop, document.body.scrollTop) &#125; function E(e) &#123; var t = m(e); return t &gt;= w &amp;&amp; t &lt;= b + w &#125; function S() &#123; var e = document.createElement("audio"); e.setAttribute("class", l); e.src = i; e.loop = false; e.addEventListener("canplay", function() &#123; setTimeout(function() &#123; x(k) &#125;, 500); setTimeout(function() &#123; N(); p(); for (var e = 0; e &lt; O.length; e++) &#123; T(O[e]) &#125; &#125;, 15500) &#125;, true); e.addEventListener("ended", function() &#123; N(); h() &#125;, true); e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;"; document.body.appendChild(e); e.play() &#125; function x(e) &#123; e.className += " " + s + " " + o &#125; function T(e) &#123; e.className += " " + s + " " + u[Math.floor(Math.random() * u.length)] &#125; function N() &#123; var e = document.getElementsByClassName(s); var t = new RegExp("\\b" + s + "\\b"); for (var n = 0; n &lt; e.length; ) &#123; e[n].className = e[n].className.replace(t, "") &#125; &#125; var e = 30; var t = 30; var n = 350; var r = 350; var i = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3"; var s = "mw-harlem_shake_me"; var o = "im_first"; var u = ["im_drunk", "im_baked", "im_trippin", "im_blown"]; var a = "mw-strobe_light"; var f = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css"; var l = "mw_added_css"; var b = g(); var w = y(); var C = document.getElementsByTagName("*"); var k = null; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; if (E(A)) &#123; k = A; break &#125; &#125; &#125; if (A === null) &#123; console.warn("Could not find a node of the right size. Please try a different page."); return &#125; c(); S(); var O = []; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; O.push(A) &#125; &#125;&#125;)() '&gt;High一下&lt;/a&gt; &lt;/li&gt; (3) 代码块的内容不需要再做任何修改,清缓存hexo clean，重新生成hexo g，启动服务hexo s查看效果 底部增加运行时间(1) 修改themes/next/layout/_partials/footer.swig，增加如下代码： 123456789101112131415161718&lt;!-- 在网页底部添加网站运行时间 --&gt;&lt;span id="timeDate"&gt;载入天数...&lt;/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/span&gt;&lt;script&gt; var now = new Date(); function createtime() &#123; var grt= new Date("07/21/2018 00:00:00");//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 )&#123;hnum = "0" + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = "0" + mnum;&#125; seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = "0" + snum;&#125; document.getElementById("timeDate").innerHTML = "Run for "+dnum+" Days "; document.getElementById("times").innerHTML = hnum + " Hours " + mnum + " m " + snum + " s"; &#125;setInterval("createtime()",250);&lt;/script&gt; (2) 运行效果： 当前所在菜单下划线显示(1) 打开themes\next\layout\ _partials目录下的header.swig文件(2) 在底部添加以下代码： 123456789101112131415&lt;script&gt; window.onload = function()&#123; var path = 'https://malizhi.cn'; //这里要改成你博客的地址 var localhostItem = String(window.location).split(path)[1]; var LiNode = document.querySelectorAll('#menu &gt; li &gt; a') for(var i = 0; i&lt; LiNode.length;i++)&#123; var item = String(LiNode[i].href).split(path)[1]; if(item == localhostItem &amp;&amp; item != undefined)&#123; LiNode[i].setAttribute('style','border-bottom:1px solid black'); &#125; &#125; &#125;;&lt;/script&gt; (3) hexo clean &amp;&amp; hexo g &amp;&amp; hexo s后完成效果： 底部跳动图标实现(1) 在next\layout_partials下的footer.swig文件中，在你所需要调动的图标所对应的span中增加对应的ID(2) 在主题的css文件next\source\css\_variables\custom.styl ，增加以下代码即可： 123456789101112131415//底部爱心小图标跳动keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;//图标所对应的span中的ID#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(255, 113, 113);&#125; (3) hexo clean &amp;&amp; hexo g &amp;&amp; hexo s后完成效果： 第三方服务集成站内搜索NexT 支持集成 Swiftype、 微搜索、Local Search 和 Algolia。在这里我使用的是Local Search，下面将介绍如何使用:(1) 添加百度/谷歌/本地 自定义站点内容搜索，安装hexo-generator-searchdb，在站点的根目录下执行以下命令： 1npm install hexo-generator-searchdb --save (2) 编辑站点配置文件_config.yml，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 (3) 编辑主题配置文件_config.yml，启用本地搜索功能： 123# Local searchlocal_search: enable: true 注：其他搜索方式请查看站内搜索 (4) 清缓存hexo clean，重新生成hexo g，启动服务hexo s，效果如下： 数据统计分析NexT 支持集成 不蒜子统计、百度统计等多种数据统计方式。此处使用不蒜子统计，下面将介绍如何使用: 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后 (1) 全局配置：编辑主题配置文件_config.yml中的busuanzi_count的配置项。当enable: true时，代表开启全局开关。若 site_uv 、site_pv 、 page_pv 的值均为 false 时，不蒜子仅作记录而不会在页面上显示(2) 站点UV配置：当site_uv: true时，代表在页面底部显示站点的UV值。site_uv_header和site_uv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的font-awesome。如下： 1234# 效果：本站访客数12345人次site_uv: truesite_uv_header: &lt;i class="fa fa-user"&gt;&lt;/i&gt; 本站访客数site_uv_footer: 人次 (3) 站点PV配置：当site_pv: true时，代表在页面底部显示站点的PV值。site_pv_header和site_pv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的font-awesome。如下： 1234# 效果：本站总访问量12345次site_pv: truesite_pv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; 本站总访问量site_pv_footer: 次 注：其他统计方式请查看数据统计分析 (4) 清缓存hexo clean，重新生成hexo g，启动服务hexo s，效果如下： (5) 不蒜子统计不生效，浏览器控制台报错原因：由于 busuanzi(不蒜子) 的域名更新，导致了使用 Hexo Next 主题时统计数据失效解决方法： 到 hexo 的 themes 文件夹下, 打开\themes\next\layout_third-party\analytics\busuanzi-counter.swig文件 将src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;修改为src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot; 内容分享服务NexT 支持集成 jiathis、baidushare 和 AddThis内容分享服务。在这里我使用的是baidushare，下面将介绍如何使用:(1) 编辑站点配置文件_config.yml，新增以下内容到任意位置： 1baidushare: true #百度分享功能 (2) 编辑主题配置文件_config.yml，设置其展现方式： 12baidushare: type: button #百度分享展示的方式button|slide 注：其他内容分享方式请查看内容分享服务 (4) 清缓存hexo clean，重新生成hexo g，启动服务hexo s，效果如下： 文章阅读次数统计(1) 在LeanCloud进行对应的配置详细配置参考文章：配置LeanCloud(2) 注Class名称必须为Counter Gitment评论(1) Gitment评论搭建参考：https://sjq597.github.io/2018/05/18/Hexo-使用Gitment评论功能/(2) 踩过的坑： Error: Validation Failed原因：issue的Label有长度限制,对于中文博客来说,中文标题很容易就超过长度限制方案：修改themes/next/layout/_third-party/comments/gitment.swig中的id部分如下: 1234var gitment = new &#123;&#123;CommentsClass&#125;&#125;(&#123; id: '&#123;&#123; page.date &#125;&#125;', owner: '&#123;&#123; theme.gitment.github_user &#125;&#125;', repo: '&#123;&#123; theme.gitment.github_repo &#125;&#125;', object ProgressEvent原因：作者的default.css和gitment.browser.js域名用的别人的，现在过期了方案：修改themes/next/layout/_third-party/comments/gitment.swig中对应部分如下: 1234&lt;!-- &lt;link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"&gt; --&gt;&lt;!-- &lt;script src="https://imsun.github.io/gitment/dist/gitment.browser.js"&gt;&lt;/script&gt; --&gt;&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/theme-next/theme-next-gitment@1/default.css"&gt;&lt;script src="https://cdn.jsdelivr.net/gh/theme-next/theme-next-gitment@1/gitment.browser.js"&gt;&lt;/script&gt; 注释部分是原来的地址，过期了的，下面的是引用的其他有效地址(3) 汉化：修改themes/next/layout/_third-party/comments/gitment.swig中对应部分如下: 12&lt;link rel="stylesheet" href="https://billts.site/extra_css/gitment.css"&gt;&lt;script src="https://billts.site/js/gitment.js"&gt;&lt;/script&gt; (4) 清缓存hexo clean，重新生成hexo g，部署hexo d，然后访问username.github.io查看效果(5) 每篇文章都需要登录GitHub账号然后点击初始化 来必力评论(1) 登陆来必力获取你的livere_uid 没有账号需要注册一个注册完点击安装，然后填上博客的相应信息，如图data-uid就是所需要的livere_uid(2) 编辑主题配置文件， 编辑livere_uid字段，设置如下: 1livere_uid: #your livere_uid 参考(1) https://cloud.tencent.com/developer/article/1482021(2) https://tianbozhang.coding.me/personal-blog-custom.html(3) https://ehlxr.me/categories/Hexo/(4) https://malizhi.cn/nextTutorial/#more]]></content>
      <categories>
        <category>Hexo个人博客搭建</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建-入坑]]></title>
    <url>%2F2018%2F08%2F30%2Fhexo%2Fhexo_blog01%2F</url>
    <content type="text"><![CDATA[前言:使用Node.js+Hexo+Next+Git+GitHub，让你几分钟就能创建一个博客 基本配置(1) Node.js(2) Git(3) GitHub账号及仓库 注：上述条件安装完成后执行后续操作 配置GitHub仓库创建仓库(1) 新建一个名为username.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库(2) 每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库 1.注册的邮箱一定要验证，否则不会成功2.仓库名字必须是：username.github.io，其中username是你的用户名 配置SSH key(1) 提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题(2) 检查本机已存在的ssh密钥：cd ~/. ssh，如果提示No such file or directory说明你是第一次使用Git(3) 生成密钥：ssh-keygen -t rsa -C &quot;邮件地址&quot;，然后三次回车(4) 打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容(5) 打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，将刚复制的内容粘贴到key那里，title随便填，保存: 测试是否成功(1) 输入命令：ssh -T git@github.com(2) 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes(3) 看到以下信息说明SSH已配置成功： Hi luxiong-github! You’ve successfully authenticated, but GitHub does not provide shell access. 配置Git用户名邮箱(非必须)(1) 执行以下命令： 12git config --global user.name "luxiong-github"// 你的github用户名，非昵称git config --global user.email "xxx@qq.com"// 填写你的github注册邮箱 (2) 配置详情参考：https://blog.csdn.net/sjt19910311/article/details/83685616 创建hexo项目建议使用文本编辑工具管理项目，推荐使用：VSCode、sublime等，我使用的是VSCode 安装Hexo(1) 打开Git Bash，是一个命令输入终端，后序所有命令操作都在此进行(2) 输入命令：npm install -g hexo-cli(3) 如下图: 创建项目文件夹(1) 在Git Bash中切换到博客目录：cd E:React/my-blog/(2) 新建项目目录：hexo init(3) 如下图是在E:\React\my-blog\目录下新建了一个hexo目录 安装依赖包(1) 切换到hexo目录：cd hexo/(2) 安装依赖包：npm install(3) 安装完成后目录结构如下图： 目录结构介绍请看官方API：https://hexo.io/zh-cn/docs/setup 站点配置网站配置1234567title: 卢雄的博客 #网站标题subtitle: Live and learn. #网站副标题description: 要做的事情总找得出时间和机会；不愿意做的事情也总能找得出借口... #网站描述keywords: Blog,Hexo,Github #网站的关键词。使用半角逗号 , 分隔多个关键词author: luxiong #作者language: zh-Hans #语言 en:英文 zh-Hans:简体中文timezone: #网站时区,默认使用电脑的时区 部署配置1234deploy: #部署相关的配置 type: git #使用Git提交 repo: git@github.com:username/username.github.io.git #仓库地址，username替换为Github的username branch: master #分支名称。如果不指定，则默认值为 master 其他详细配置参考文档：https://hexo.io/zh-cn/docs/configuration 预览(1) 生成文件在终端输入命令：hexo g或者hexo generate，作用是将source下面的资源文件在public下生成对应的HTML文件，这些文件将来都是要提交到github去的(2) 启动服务在终端输入命令：hexo s或者hexo server，作用是开启本地预览服务，打开浏览器访问 localhost:4000 即可看到内容，默认的已经写好了一篇名为Hello World的文章(3) 如果浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考：http://blog.liuxianan.com/windows-port-bind.html 其他配置上述只是完成了最基本的博客搭建，还有许多配置仍需完善… 分类(1) 输入命令：hexo new page &quot;categories&quot;(2) 此命令会在source目录下面创建一个categories目录，内含一个index.md文档，打开进行编辑(3) 增加页面类型，结果如下： 123title: categoriesdate: 2019-08-31 13:47:02type: "categories" #将页面的类型设置为categories 标签(1) 输入命令：hexo new page &quot;tags&quot;(2) 此命令会在source目录下面创建一个tags目录，内含一个index.md文档，打开进行编辑(3) 设置页面类型，结果如下： 123title: tagsdate: 2019-08-31 13:47:02type: "tags" #将页面的类型设置为tags about自我介绍页面(1) 输入命令：hexo new page &quot;about&quot;(2) 此命令会在source目录下面创建一个about目录，内含一个index.md文档，打开进行编辑(3) 设置页面类型，结果如下： 123title: aboutdate: 2018-08-31 16:47:02type: "about" # 将页面的类型设置为about 404页面(1) 在source目录下创建一个404.html文件(2) 打开文件，将内容修改为以下内容： 1234567891011121314151617181920&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;" /&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow" /&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="回到我的主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; (3) 此404页面为腾讯公益404页面，也可自定义404页面内容 主题修改(1) 在themes目录下存放的是博客的主题，默认的主题是landscape，可以修改其他主题，推荐使用next主题(2) 将终端切换到hexo目录，执行以下命令： 1git clone https://github.com/iissnan/hexo-theme-next themes/next (3) 修改_config.yml中的theme: landscape改为theme: next，然后重新执行hexo g来重新生成 启用配置(1) 分类、标签、404页面等配置是跟随主题来配置的，所以每次更换主题后都需要启用对应配置才能生效(2) 打开themes -&gt; next目录下的主题配置文件_config.yml，开启以下配置： 123456789menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th #archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap commonweal: /404/ || heartbeat (3) 分别执行以下命令，浏览器访问4000端口进行验证： 123hexo clean # 清除原先生成的public下的文件hexo g # 生成public下的文件hexo s # 启动服务 next主题详细配置参考：http://theme-next.iissnan.com/theme-settings.html 发布文章测试(1) 新建一篇文章：hexo new &quot;测试文章&quot;或者直接在source_posts\目录下面新建测试文章.md文件(2) 打开md文件，按格式书写文章内容： 12345678910---title: 测试标题 # 这是标题tags: # 这里写的标签会自动汇集到 tags 页面上- 测试标签1 # 可配置多个标签，注意格式- 测试标签2category: # 这里写的分类会自动汇集到 categories 页面上，分类可以多级- 测试一级分类 # 一级分类- 测试二级分类 # 二级分类---测试文章内容 (3) 预览： 123hexo clean # 清除原先生成的public下的文件hexo g # 生成public下的文件hexo s # 启动服务 1.修改内容一旦预览与修改不一致，则需要clean2.已发布的文章发生修改， 可直接预览，即 不执行上述3个命令,刷新浏览器即可3.若对md文档语法不熟悉，可参考此文章 上传到GitHub(1) 在之前已经将ssh key和_config.yml关于deploy部分的配置已经完善,不再叙述(2) 直接执行hexo d一般会报如下错误： 1Deployer not found: github 或者 Deployer not found: git 解决方案是安装自动部署发布工具： 1npm install hexo-deployer-git --save (3) 输入命令hexo d将代码上传到GitHub，完成查看GitHub如下：(4) 浏览器访问：yourname.github.io，如果出现博客的内容，说明代码上传成功 总结Hexo相关命令总结(1) 常用命令 1234567891011hexo clean #清除缓存hexo g #生成静态页面至public目录，完整写法为：hexo generatehexo s #启动本地服务，完整写法为：hexo serverhexo d #发布到远程(GitHub)，完整写法为：hexo deployhexo new page "xxx" #新建xxx页面hexo new "xxx" #新建xxx文章hexo help #查看帮助hexo version #查看Hexo的版本hexo init #生成站点npm install --save xxx #安装插件npm unstall xxx #卸载插件 (2) 组合命令 12hexo s -g #生成并本地预览hexo d -g #生成并上传 命令尽量手写少复制粘贴，便于熟悉和理解 问题总结(1) 发布的文章都是md文档，可以先了解一下Markdown语法(2) FATAL Cannot read property ‘replace’ of null问题原因：url不能为空解决：修改站点配置文件_config.yml 1url: http://luxiong-blog.com (3) 静态资源图片设置：\themes\next\source\images\用来存放图片遇到某些地方需要用到图片时(主题配置文件中的avatar、wechatpay、alipay等)，直接使用相对路径引用： 123avatar: /images/avatar.jpg #头像wechatpay: /images/wechatpay.jpg #微信打赏码alipay: /images/alipay.jpg #支付宝打赏码 (4) 阅读全文：生成的博文目录会显示全部的文章内容，在合适的位置加上&lt;!--more--&gt;即可隐藏内容，例如： 12345678910111213# 前言使用github pages服务搭建博客的好处有：1. 全是静态文件，访问速度快；2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；&lt;!--more--&gt;4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；5. 博客内容可以轻松打包、转移、发布到其它平台；6. 等等； 完成效果：(5) 建站问题及错误，遇到问题不要慌，大胆猜测小心验证，百度搜索问题关键字基本都有解决方案 参考(1) https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html(2) https://tianbozhang.coding.me/personal-blog-start.html]]></content>
      <categories>
        <category>Hexo个人博客搭建</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
